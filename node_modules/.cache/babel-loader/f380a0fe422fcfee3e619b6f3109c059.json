{"ast":null,"code":"var _jsxFileName = \"/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, Circle } from \"react-google-maps\";\n\nvar Map = function Map(props) {\n  var totalList = [];\n\n  for (var i = 0; i < props.markerLocX.length; i++) {\n    totalList.push([props.markerLocX[i], props.markerLocY[i]]);\n  }\n\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: {\n      lat: 43.4713714,\n      lng: -80.5438478\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, totalList.map(function (coordPair) {\n    return React.createElement(Fragment, {\n      key: Math.random() * 100000000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: parseFloat(coordPair[0]),\n        lng: parseFloat(coordPair[1])\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(coordPair[0]),\n        lng: parseFloat(coordPair[1])\n      },\n      radius: 50,\n      options: {\n        strokeColor: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Marker","Circle","Map","props","totalList","i","markerLocX","length","push","markerLocY","zoom","lat","lng","map","coordPair","Math","random","parseFloat","strokeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAEnB,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,UAAN,CAAiBC,MAArC,EAA6CF,CAAC,EAA9C,EAAiD;AAC/CD,IAAAA,SAAS,CAACI,IAAV,CAAe,CAACL,KAAK,CAACG,UAAN,CAAiBD,CAAjB,CAAD,EAAsBF,KAAK,CAACM,UAAN,CAAiBJ,CAAjB,CAAtB,CAAf;AACD;;AACD,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEF,KAAK,CAACO,IADrB;AAEE,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAC,UAAL;AAAiBC,MAAAA,GAAG,EAAC,CAAC;AAAtB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,SAAS,CAACS,GAAV,CAAc,UAAAC,SAAS,EAAI;AAC1B,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,KAAgB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AACRL,QAAAA,GAAG,EAAEM,UAAU,CAACH,SAAS,CAAC,CAAD,CAAV,CADP;AAERF,QAAAA,GAAG,EAAEK,UAAU,CAACH,SAAS,CAAC,CAAD,CAAV;AAFP,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbH,QAAAA,GAAG,EAAEM,UAAU,CAACH,SAAS,CAAC,CAAD,CAAV,CADF;AAEbF,QAAAA,GAAG,EAAEK,UAAU,CAACH,SAAS,CAAC,CAAD,CAAV;AAFF,OADjB;AAKE,MAAA,MAAM,EAAE,EALV;AAME,MAAA,OAAO,EAAE;AAACI,QAAAA,WAAW,EAAE;AAAd,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAkBD,GAnBA,CALH,CADF;AA4BD,CAlCD;;AAoCA,eAAenB,YAAY,CAACF,aAAa,CAACK,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n  \n  var totalList = [];\n  for (var i = 0; i < props.markerLocX.length; i++){\n    totalList.push([props.markerLocX[i], props.markerLocY[i]]);\n  }\n  return (\n    <GoogleMap\n      defaultZoom={props.zoom}\n      defaultCenter={{lat:43.4713714, lng:-80.5438478}}\n    >\n    \n      {totalList.map(coordPair => {\n        return (\n          <Fragment key={Math.random() * 100000000}>\n            <Marker\n              position={{\n                lat: parseFloat(coordPair[0]),\n                lng: parseFloat(coordPair[1])\n              }}\n            />\n            <Circle\n              defaultCenter={{\n                lat: parseFloat(coordPair[0]),\n                lng: parseFloat(coordPair[1])\n              }}\n              radius={50}\n              options={{strokeColor: \"#ff0000\"}}\n            />\n          </Fragment>\n        );\n      })}\n    </GoogleMap>\n  );\n}\n\nexport default withScriptjs(withGoogleMap(Map));"]},"metadata":{},"sourceType":"module"}