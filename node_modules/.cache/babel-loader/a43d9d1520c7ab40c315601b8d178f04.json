{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from 'rc-tree';\nimport { createRef } from '../util';\nexport var popupContextTypes = {\n  onPopupKeyDown: PropTypes.func.isRequired,\n  onTreeNodeSelect: PropTypes.func.isRequired,\n  onTreeNodeCheck: PropTypes.func.isRequired\n};\n\nvar BasePopup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasePopup, _React$Component);\n\n  function BasePopup(props) {\n    var _this;\n\n    _classCallCheck(this, BasePopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasePopup).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onTreeExpand\", function (expandedKeyList) {\n      var _this$props = _this.props,\n          treeExpandedKeys = _this$props.treeExpandedKeys,\n          onTreeExpand = _this$props.onTreeExpand,\n          onTreeExpanded = _this$props.onTreeExpanded; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        _this.setState({\n          expandedKeyList: expandedKeyList\n        }, onTreeExpanded);\n      }\n\n      if (onTreeExpand) {\n        onTreeExpand(expandedKeyList);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (loadedKeys) {\n      _this.setState({\n        loadedKeys: loadedKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTree\", function () {\n      return _this.treeRef.current;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoadData\", function () {\n      var _this$props2 = _this.props,\n          loadData = _this$props2.loadData,\n          upperSearchValue = _this$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterTreeNode\", function (treeNode) {\n      var _this$props3 = _this.props,\n          upperSearchValue = _this$props3.upperSearchValue,\n          treeNodeFilterProp = _this$props3.treeNodeFilterProp;\n      var filterVal = treeNode.props[treeNodeFilterProp];\n\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNotFound\", function () {\n      var _this$props4 = _this.props,\n          prefixCls = _this$props4.prefixCls,\n          notFoundContent = _this$props4.notFoundContent;\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-not-found\")\n      }, notFoundContent);\n    });\n\n    var treeDefaultExpandAll = props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n        keyEntities = props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var _expandedKeyList = treeDefaultExpandedKeys;\n\n    if (treeDefaultExpandAll) {\n      _expandedKeyList = Object.keys(keyEntities);\n    }\n\n    _this.state = {\n      keyList: [],\n      expandedKeyList: _expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedStateFromProps`\n      cachedExpandedKeyList: [],\n      // eslint-disable-line react/no-unused-state\n      loadedKeys: []\n    };\n    _this.treeRef = createRef();\n    return _this;\n  }\n\n  _createClass(BasePopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          keyList = _this$state.keyList,\n          expandedKeyList = _this$state.expandedKeyList,\n          loadedKeys = _this$state.loadedKeys;\n      var _this$props5 = this.props,\n          prefixCls = _this$props5.prefixCls,\n          treeNodes = _this$props5.treeNodes,\n          filteredTreeNodes = _this$props5.filteredTreeNodes,\n          treeIcon = _this$props5.treeIcon,\n          treeLine = _this$props5.treeLine,\n          treeCheckable = _this$props5.treeCheckable,\n          treeCheckStrictly = _this$props5.treeCheckStrictly,\n          multiple = _this$props5.multiple,\n          ariaId = _this$props5.ariaId,\n          renderSearch = _this$props5.renderSearch,\n          switcherIcon = _this$props5.switcherIcon,\n          searchHalfCheckedKeys = _this$props5.searchHalfCheckedKeys;\n      var _this$context$rcTreeS = this.context.rcTreeSelect,\n          onPopupKeyDown = _this$context$rcTreeS.onPopupKeyDown,\n          onTreeNodeSelect = _this$context$rcTreeS.onTreeNodeSelect,\n          onTreeNodeCheck = _this$context$rcTreeS.onTreeNodeCheck;\n      var loadData = this.getLoadData();\n      var treeProps = {};\n\n      if (treeCheckable) {\n        treeProps.checkedKeys = keyList;\n      } else {\n        treeProps.selectedKeys = keyList;\n      }\n\n      var $notFound;\n      var $treeNodes;\n\n      if (filteredTreeNodes) {\n        if (filteredTreeNodes.length) {\n          treeProps.checkStrictly = true;\n          $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n          if (treeCheckable && !treeCheckStrictly) {\n            treeProps.checkedKeys = {\n              checked: keyList,\n              halfChecked: searchHalfCheckedKeys\n            };\n          }\n        } else {\n          $notFound = this.renderNotFound();\n        }\n      } else if (!treeNodes || !treeNodes.length) {\n        $notFound = this.renderNotFound();\n      } else {\n        $treeNodes = treeNodes;\n      }\n\n      var $tree;\n\n      if ($notFound) {\n        $tree = $notFound;\n      } else {\n        $tree = React.createElement(Tree, _extends({\n          ref: this.treeRef,\n          prefixCls: \"\".concat(prefixCls, \"-tree\"),\n          showIcon: treeIcon,\n          showLine: treeLine,\n          selectable: !treeCheckable,\n          checkable: treeCheckable,\n          checkStrictly: treeCheckStrictly,\n          multiple: multiple,\n          loadData: loadData,\n          loadedKeys: loadedKeys,\n          expandedKeys: expandedKeyList,\n          filterTreeNode: this.filterTreeNode,\n          onSelect: onTreeNodeSelect,\n          onCheck: onTreeNodeCheck,\n          onExpand: this.onTreeExpand,\n          onLoad: this.onLoad,\n          switcherIcon: switcherIcon\n        }, treeProps), $treeNodes);\n      }\n\n      return React.createElement(\"div\", {\n        role: \"listbox\",\n        id: ariaId,\n        onKeyDown: onPopupKeyDown,\n        tabIndex: -1\n      }, renderSearch ? renderSearch() : null, $tree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _ref = prevState || {},\n          _ref$prevProps = _ref.prevProps,\n          prevProps = _ref$prevProps === void 0 ? {} : _ref$prevProps,\n          loadedKeys = _ref.loadedKeys,\n          expandedKeyList = _ref.expandedKeyList,\n          cachedExpandedKeyList = _ref.cachedExpandedKeyList;\n\n      var valueList = nextProps.valueList,\n          valueEntities = nextProps.valueEntities,\n          keyEntities = nextProps.keyEntities,\n          treeExpandedKeys = nextProps.treeExpandedKeys,\n          filteredTreeNodes = nextProps.filteredTreeNodes,\n          upperSearchValue = nextProps.upperSearchValue;\n      var newState = {\n        prevProps: nextProps\n      }; // Check value update\n\n      if (valueList !== prevProps.valueList) {\n        newState.keyList = valueList.map(function (_ref2) {\n          var value = _ref2.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref3) {\n          var key = _ref3.key;\n          return key;\n        });\n      } // Show all when tree is in filter mode\n\n\n      if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n        newState.expandedKeyList = Object.keys(keyEntities);\n      } // Cache `expandedKeyList` when filter set\n\n\n      if (upperSearchValue && !prevProps.upperSearchValue) {\n        newState.cachedExpandedKeyList = expandedKeyList;\n      } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n        newState.expandedKeyList = cachedExpandedKeyList || [];\n        newState.cachedExpandedKeyList = [];\n      } // Use expandedKeys if provided\n\n\n      if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n        newState.expandedKeyList = treeExpandedKeys;\n      } // Clean loadedKeys if key not exist in keyEntities anymore\n\n\n      if (nextProps.loadData) {\n        newState.loadedKeys = loadedKeys.filter(function (key) {\n          return key in keyEntities;\n        });\n      }\n\n      return newState;\n    }\n  }]);\n\n  return BasePopup;\n}(React.Component);\n\n_defineProperty(BasePopup, \"propTypes\", {\n  prefixCls: PropTypes.string,\n  upperSearchValue: PropTypes.string,\n  valueList: PropTypes.array,\n  searchHalfCheckedKeys: PropTypes.array,\n  valueEntities: PropTypes.object,\n  keyEntities: PropTypes.object,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeNodeFilterProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  multiple: PropTypes.bool,\n  onTreeExpand: PropTypes.func,\n  treeNodes: PropTypes.node,\n  filteredTreeNodes: PropTypes.node,\n  notFoundContent: PropTypes.node,\n  ariaId: PropTypes.string,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  // HOC\n  renderSearch: PropTypes.func,\n  onTreeExpanded: PropTypes.func\n});\n\n_defineProperty(BasePopup, \"contextTypes\", {\n  rcTreeSelect: PropTypes.shape(_objectSpread({}, popupContextTypes))\n});\n\npolyfill(BasePopup);\nexport default BasePopup;","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-tree-select/es/Base/BasePopup.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","_extends","assign","prototype","hasOwnProperty","call","apply","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","p","obj","React","PropTypes","polyfill","Tree","createRef","popupContextTypes","onPopupKeyDown","func","isRequired","onTreeNodeSelect","onTreeNodeCheck","BasePopup","_React$Component","_this","expandedKeyList","_this$props","treeExpandedKeys","onTreeExpand","onTreeExpanded","setState","loadedKeys","treeRef","current","_this$props2","loadData","upperSearchValue","treeNode","_this$props3","treeNodeFilterProp","filterVal","toUpperCase","indexOf","_this$props4","prefixCls","notFoundContent","createElement","className","treeDefaultExpandAll","treeDefaultExpandedKeys","keyEntities","_expandedKeyList","state","keyList","cachedExpandedKeyList","render","_this$state","_this$props5","treeNodes","filteredTreeNodes","treeIcon","treeLine","treeCheckable","treeCheckStrictly","multiple","ariaId","renderSearch","switcherIcon","searchHalfCheckedKeys","_this$context$rcTreeS","context","rcTreeSelect","getLoadData","treeProps","checkedKeys","selectedKeys","$notFound","$treeNodes","checkStrictly","checked","halfChecked","renderNotFound","$tree","ref","showIcon","showLine","selectable","checkable","expandedKeys","filterTreeNode","onSelect","onCheck","onExpand","onLoad","role","id","onKeyDown","tabIndex","getDerivedStateFromProps","nextProps","prevState","_ref","_ref$prevProps","prevProps","valueList","valueEntities","newState","map","_ref2","entity","_ref3","Component","string","array","object","bool","oneOfType","node","shape"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuD,QAAII,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAAd;;AAAmC,QAAI,OAAOE,MAAM,CAACE,qBAAd,KAAwC,UAA5C,EAAwD;AAAEH,MAAAA,OAAO,GAAGA,OAAO,CAACI,MAAR,CAAeH,MAAM,CAACE,qBAAP,CAA6BJ,MAA7B,EAAqCM,MAArC,CAA4C,UAAUC,GAAV,EAAe;AAAE,eAAOL,MAAM,CAACM,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,OAA9H,CAAf,CAAV;AAA4J;;AAACR,IAAAA,OAAO,CAACS,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAAEC,MAAAA,eAAe,CAAChB,MAAD,EAASe,GAAT,EAAcX,MAAM,CAACW,GAAD,CAApB,CAAf;AAA4C,KAA7E;AAAiF;;AAAC,SAAOf,MAAP;AAAgB;;AAEje,SAASiB,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGX,MAAM,CAACY,MAAP,IAAiB,UAAUlB,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAIc,GAAT,IAAgBX,MAAhB,EAAwB;AAAE,YAAIE,MAAM,CAACa,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCjB,MAArC,EAA6CW,GAA7C,CAAJ,EAAuD;AAAEf,UAAAA,MAAM,CAACe,GAAD,CAAN,GAAcX,MAAM,CAACW,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOf,MAAP;AAAgB,GAA5P;;AAA8P,SAAOiB,QAAQ,CAACK,KAAT,CAAe,IAAf,EAAqBpB,SAArB,CAAP;AAAyC;;AAE7T,SAASqB,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2B3B,MAA3B,EAAmC4B,KAAnC,EAA0C;AAAE,OAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,KAAK,CAACzB,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AAAE,QAAI4B,UAAU,GAAGD,KAAK,CAAC3B,CAAD,CAAtB;AAA2B4B,IAAAA,UAAU,CAAChB,UAAX,GAAwBgB,UAAU,CAAChB,UAAX,IAAyB,KAAjD;AAAwDgB,IAAAA,UAAU,CAACC,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWD,UAAf,EAA2BA,UAAU,CAACE,QAAX,GAAsB,IAAtB;AAA4BzB,IAAAA,MAAM,CAAC0B,cAAP,CAAsBhC,MAAtB,EAA8B6B,UAAU,CAACd,GAAzC,EAA8Cc,UAA9C;AAA4D;AAAE;;AAE7T,SAASI,YAAT,CAAsBR,WAAtB,EAAmCS,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBP,iBAAiB,CAACF,WAAW,CAACN,SAAb,EAAwBe,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBR,iBAAiB,CAACF,WAAD,EAAcU,WAAd,CAAjB;AAA6C,SAAOV,WAAP;AAAqB;;AAEvN,SAASW,0BAAT,CAAoCC,IAApC,EAA0ChB,IAA1C,EAAgD;AAAE,MAAIA,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAR,EAAsE;AAAE,WAAOA,IAAP;AAAc;;AAAC,SAAOiB,sBAAsB,CAACD,IAAD,CAA7B;AAAsC;;AAE/K,SAASE,eAAT,CAAyBC,CAAzB,EAA4B;AAAED,EAAAA,eAAe,GAAGjC,MAAM,CAACmC,cAAP,GAAwBnC,MAAM,CAACoC,cAA/B,GAAgD,SAASH,eAAT,CAAyBC,CAAzB,EAA4B;AAAE,WAAOA,CAAC,CAACG,SAAF,IAAerC,MAAM,CAACoC,cAAP,CAAsBF,CAAtB,CAAtB;AAAiD,GAAjJ;AAAmJ,SAAOD,eAAe,CAACC,CAAD,CAAtB;AAA4B;;AAE7M,SAASF,sBAAT,CAAgCD,IAAhC,EAAsC;AAAE,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAE,UAAM,IAAIO,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOP,IAAP;AAAc;;AAEtK,SAASQ,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIrB,SAAJ,CAAc,oDAAd,CAAN;AAA4E;;AAACoB,EAAAA,QAAQ,CAAC3B,SAAT,GAAqBb,MAAM,CAAC0C,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAC5B,SAAvC,EAAkD;AAAE8B,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEJ,QAAT;AAAmBf,MAAAA,QAAQ,EAAE,IAA7B;AAAmCD,MAAAA,YAAY,EAAE;AAAjD;AAAf,GAAlD,CAArB;AAAkJ,MAAIiB,UAAJ,EAAgBI,eAAe,CAACL,QAAD,EAAWC,UAAX,CAAf;AAAwC;;AAEjY,SAASI,eAAT,CAAyBX,CAAzB,EAA4BY,CAA5B,EAA+B;AAAED,EAAAA,eAAe,GAAG7C,MAAM,CAACmC,cAAP,IAAyB,SAASU,eAAT,CAAyBX,CAAzB,EAA4BY,CAA5B,EAA+B;AAAEZ,IAAAA,CAAC,CAACG,SAAF,GAAcS,CAAd;AAAiB,WAAOZ,CAAP;AAAW,GAAxG;;AAA0G,SAAOW,eAAe,CAACX,CAAD,EAAIY,CAAJ,CAAtB;AAA+B;;AAE1K,SAASpC,eAAT,CAAyBqC,GAAzB,EAA8BtC,GAA9B,EAAmCmC,KAAnC,EAA0C;AAAE,MAAInC,GAAG,IAAIsC,GAAX,EAAgB;AAAE/C,IAAAA,MAAM,CAAC0B,cAAP,CAAsBqB,GAAtB,EAA2BtC,GAA3B,EAAgC;AAAEmC,MAAAA,KAAK,EAAEA,KAAT;AAAgBrC,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEsB,IAAAA,GAAG,CAACtC,GAAD,CAAH,GAAWmC,KAAX;AAAmB;;AAAC,SAAOG,GAAP;AAAa;;AAEjN,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAO,IAAIC,iBAAiB,GAAG;AAC7BC,EAAAA,cAAc,EAAEL,SAAS,CAACM,IAAV,CAAeC,UADF;AAE7BC,EAAAA,gBAAgB,EAAER,SAAS,CAACM,IAAV,CAAeC,UAFJ;AAG7BE,EAAAA,eAAe,EAAET,SAAS,CAACM,IAAV,CAAeC;AAHH,CAAxB;;AAMP,IAAIG,SAAS;AACb;AACA,UAAUC,gBAAV,EAA4B;AAC1BrB,EAAAA,SAAS,CAACoB,SAAD,EAAYC,gBAAZ,CAAT;;AAEA,WAASD,SAAT,CAAmBrC,KAAnB,EAA0B;AACxB,QAAIuC,KAAJ;;AAEA5C,IAAAA,eAAe,CAAC,IAAD,EAAO0C,SAAP,CAAf;;AAEAE,IAAAA,KAAK,GAAG/B,0BAA0B,CAAC,IAAD,EAAOG,eAAe,CAAC0B,SAAD,CAAf,CAA2B5C,IAA3B,CAAgC,IAAhC,CAAP,CAAlC;;AAEAL,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,cAAhC,EAAgD,UAAUC,eAAV,EAA2B;AACxF,UAAIC,WAAW,GAAGF,KAAK,CAACvC,KAAxB;AAAA,UACI0C,gBAAgB,GAAGD,WAAW,CAACC,gBADnC;AAAA,UAEIC,YAAY,GAAGF,WAAW,CAACE,YAF/B;AAAA,UAGIC,cAAc,GAAGH,WAAW,CAACG,cAHjC,CADwF,CAIvC;;AAEjD,UAAI,CAACF,gBAAL,EAAuB;AACrBH,QAAAA,KAAK,CAACM,QAAN,CAAe;AACbL,UAAAA,eAAe,EAAEA;AADJ,SAAf,EAEGI,cAFH;AAGD;;AAED,UAAID,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACH,eAAD,CAAZ;AACD;AACF,KAfc,CAAf;;AAiBApD,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,QAAhC,EAA0C,UAAUO,UAAV,EAAsB;AAC7EP,MAAAA,KAAK,CAACM,QAAN,CAAe;AACbC,QAAAA,UAAU,EAAEA;AADC,OAAf;AAGD,KAJc,CAAf;;AAMA1D,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,SAAhC,EAA2C,YAAY;AACpE,aAAOA,KAAK,CAACQ,OAAN,CAAcC,OAArB;AACD,KAFc,CAAf;;AAIA5D,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,aAAhC,EAA+C,YAAY;AACxE,UAAIU,YAAY,GAAGV,KAAK,CAACvC,KAAzB;AAAA,UACIkD,QAAQ,GAAGD,YAAY,CAACC,QAD5B;AAAA,UAEIC,gBAAgB,GAAGF,YAAY,CAACE,gBAFpC;AAGA,UAAIA,gBAAJ,EAAsB,OAAO,IAAP;AACtB,aAAOD,QAAP;AACD,KANc,CAAf;;AAQA9D,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,gBAAhC,EAAkD,UAAUa,QAAV,EAAoB;AACnF,UAAIC,YAAY,GAAGd,KAAK,CAACvC,KAAzB;AAAA,UACImD,gBAAgB,GAAGE,YAAY,CAACF,gBADpC;AAAA,UAEIG,kBAAkB,GAAGD,YAAY,CAACC,kBAFtC;AAGA,UAAIC,SAAS,GAAGH,QAAQ,CAACpD,KAAT,CAAesD,kBAAf,CAAhB;;AAEA,UAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;AACjC,eAAOJ,gBAAgB,IAAII,SAAS,CAACC,WAAV,GAAwBC,OAAxB,CAAgCN,gBAAhC,MAAsD,CAAC,CAAlF;AACD;;AAED,aAAO,KAAP;AACD,KAXc,CAAf;;AAaA/D,IAAAA,eAAe,CAACsB,sBAAsB,CAAC6B,KAAD,CAAvB,EAAgC,gBAAhC,EAAkD,YAAY;AAC3E,UAAImB,YAAY,GAAGnB,KAAK,CAACvC,KAAzB;AAAA,UACI2D,SAAS,GAAGD,YAAY,CAACC,SAD7B;AAAA,UAEIC,eAAe,GAAGF,YAAY,CAACE,eAFnC;AAGA,aAAOlC,KAAK,CAACmC,aAAN,CAAoB,MAApB,EAA4B;AACjCC,QAAAA,SAAS,EAAE,GAAGjF,MAAH,CAAU8E,SAAV,EAAqB,YAArB;AADsB,OAA5B,EAEJC,eAFI,CAAP;AAGD,KAPc,CAAf;;AASA,QAAIG,oBAAoB,GAAG/D,KAAK,CAAC+D,oBAAjC;AAAA,QACIC,uBAAuB,GAAGhE,KAAK,CAACgE,uBADpC;AAAA,QAEIC,WAAW,GAAGjE,KAAK,CAACiE,WAFxB,CAhEwB,CAkEa;;AAErC,QAAIC,gBAAgB,GAAGF,uBAAvB;;AAEA,QAAID,oBAAJ,EAA0B;AACxBG,MAAAA,gBAAgB,GAAGxF,MAAM,CAACC,IAAP,CAAYsF,WAAZ,CAAnB;AACD;;AAED1B,IAAAA,KAAK,CAAC4B,KAAN,GAAc;AACZC,MAAAA,OAAO,EAAE,EADG;AAEZ5B,MAAAA,eAAe,EAAE0B,gBAFL;AAGZ;AACAG,MAAAA,qBAAqB,EAAE,EAJX;AAKZ;AACAvB,MAAAA,UAAU,EAAE;AANA,KAAd;AAQAP,IAAAA,KAAK,CAACQ,OAAN,GAAgBjB,SAAS,EAAzB;AACA,WAAOS,KAAP;AACD;;AAEDlC,EAAAA,YAAY,CAACgC,SAAD,EAAY,CAAC;AACvBlD,IAAAA,GAAG,EAAE,QADkB;AAEvBmC,IAAAA,KAAK,EAAE,SAASgD,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAKJ,KAAvB;AAAA,UACIC,OAAO,GAAGG,WAAW,CAACH,OAD1B;AAAA,UAEI5B,eAAe,GAAG+B,WAAW,CAAC/B,eAFlC;AAAA,UAGIM,UAAU,GAAGyB,WAAW,CAACzB,UAH7B;AAIA,UAAI0B,YAAY,GAAG,KAAKxE,KAAxB;AAAA,UACI2D,SAAS,GAAGa,YAAY,CAACb,SAD7B;AAAA,UAEIc,SAAS,GAAGD,YAAY,CAACC,SAF7B;AAAA,UAGIC,iBAAiB,GAAGF,YAAY,CAACE,iBAHrC;AAAA,UAIIC,QAAQ,GAAGH,YAAY,CAACG,QAJ5B;AAAA,UAKIC,QAAQ,GAAGJ,YAAY,CAACI,QAL5B;AAAA,UAMIC,aAAa,GAAGL,YAAY,CAACK,aANjC;AAAA,UAOIC,iBAAiB,GAAGN,YAAY,CAACM,iBAPrC;AAAA,UAQIC,QAAQ,GAAGP,YAAY,CAACO,QAR5B;AAAA,UASIC,MAAM,GAAGR,YAAY,CAACQ,MAT1B;AAAA,UAUIC,YAAY,GAAGT,YAAY,CAACS,YAVhC;AAAA,UAWIC,YAAY,GAAGV,YAAY,CAACU,YAXhC;AAAA,UAYIC,qBAAqB,GAAGX,YAAY,CAACW,qBAZzC;AAaA,UAAIC,qBAAqB,GAAG,KAAKC,OAAL,CAAaC,YAAzC;AAAA,UACItD,cAAc,GAAGoD,qBAAqB,CAACpD,cAD3C;AAAA,UAEIG,gBAAgB,GAAGiD,qBAAqB,CAACjD,gBAF7C;AAAA,UAGIC,eAAe,GAAGgD,qBAAqB,CAAChD,eAH5C;AAIA,UAAIc,QAAQ,GAAG,KAAKqC,WAAL,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;;AAEA,UAAIX,aAAJ,EAAmB;AACjBW,QAAAA,SAAS,CAACC,WAAV,GAAwBrB,OAAxB;AACD,OAFD,MAEO;AACLoB,QAAAA,SAAS,CAACE,YAAV,GAAyBtB,OAAzB;AACD;;AAED,UAAIuB,SAAJ;AACA,UAAIC,UAAJ;;AAEA,UAAIlB,iBAAJ,EAAuB;AACrB,YAAIA,iBAAiB,CAACnG,MAAtB,EAA8B;AAC5BiH,UAAAA,SAAS,CAACK,aAAV,GAA0B,IAA1B;AACAD,UAAAA,UAAU,GAAGlB,iBAAb,CAF4B,CAEI;;AAEhC,cAAIG,aAAa,IAAI,CAACC,iBAAtB,EAAyC;AACvCU,YAAAA,SAAS,CAACC,WAAV,GAAwB;AACtBK,cAAAA,OAAO,EAAE1B,OADa;AAEtB2B,cAAAA,WAAW,EAAEZ;AAFS,aAAxB;AAID;AACF,SAVD,MAUO;AACLQ,UAAAA,SAAS,GAAG,KAAKK,cAAL,EAAZ;AACD;AACF,OAdD,MAcO,IAAI,CAACvB,SAAD,IAAc,CAACA,SAAS,CAAClG,MAA7B,EAAqC;AAC1CoH,QAAAA,SAAS,GAAG,KAAKK,cAAL,EAAZ;AACD,OAFM,MAEA;AACLJ,QAAAA,UAAU,GAAGnB,SAAb;AACD;;AAED,UAAIwB,KAAJ;;AAEA,UAAIN,SAAJ,EAAe;AACbM,QAAAA,KAAK,GAAGN,SAAR;AACD,OAFD,MAEO;AACLM,QAAAA,KAAK,GAAGvE,KAAK,CAACmC,aAAN,CAAoBhC,IAApB,EAA0BxC,QAAQ,CAAC;AACzC6G,UAAAA,GAAG,EAAE,KAAKnD,OAD+B;AAEzCY,UAAAA,SAAS,EAAE,GAAG9E,MAAH,CAAU8E,SAAV,EAAqB,OAArB,CAF8B;AAGzCwC,UAAAA,QAAQ,EAAExB,QAH+B;AAIzCyB,UAAAA,QAAQ,EAAExB,QAJ+B;AAKzCyB,UAAAA,UAAU,EAAE,CAACxB,aAL4B;AAMzCyB,UAAAA,SAAS,EAAEzB,aAN8B;AAOzCgB,UAAAA,aAAa,EAAEf,iBAP0B;AAQzCC,UAAAA,QAAQ,EAAEA,QAR+B;AASzC7B,UAAAA,QAAQ,EAAEA,QAT+B;AAUzCJ,UAAAA,UAAU,EAAEA,UAV6B;AAWzCyD,UAAAA,YAAY,EAAE/D,eAX2B;AAYzCgE,UAAAA,cAAc,EAAE,KAAKA,cAZoB;AAazCC,UAAAA,QAAQ,EAAEtE,gBAb+B;AAczCuE,UAAAA,OAAO,EAAEtE,eAdgC;AAezCuE,UAAAA,QAAQ,EAAE,KAAKhE,YAf0B;AAgBzCiE,UAAAA,MAAM,EAAE,KAAKA,MAhB4B;AAiBzC1B,UAAAA,YAAY,EAAEA;AAjB2B,SAAD,EAkBvCM,SAlBuC,CAAlC,EAkBOI,UAlBP,CAAR;AAmBD;;AAED,aAAOlE,KAAK,CAACmC,aAAN,CAAoB,KAApB,EAA2B;AAChCgD,QAAAA,IAAI,EAAE,SAD0B;AAEhCC,QAAAA,EAAE,EAAE9B,MAF4B;AAGhC+B,QAAAA,SAAS,EAAE/E,cAHqB;AAIhCgF,QAAAA,QAAQ,EAAE,CAAC;AAJqB,OAA3B,EAKJ/B,YAAY,GAAGA,YAAY,EAAf,GAAoB,IAL5B,EAKkCgB,KALlC,CAAP;AAMD;AAxFsB,GAAD,CAAZ,EAyFR,CAAC;AACH9G,IAAAA,GAAG,EAAE,0BADF;AAEHmC,IAAAA,KAAK,EAAE,SAAS2F,wBAAT,CAAkCC,SAAlC,EAA6CC,SAA7C,EAAwD;AAC7D,UAAIC,IAAI,GAAGD,SAAS,IAAI,EAAxB;AAAA,UACIE,cAAc,GAAGD,IAAI,CAACE,SAD1B;AAAA,UAEIA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,EAA5B,GAAiCA,cAFjD;AAAA,UAGIvE,UAAU,GAAGsE,IAAI,CAACtE,UAHtB;AAAA,UAIIN,eAAe,GAAG4E,IAAI,CAAC5E,eAJ3B;AAAA,UAKI6B,qBAAqB,GAAG+C,IAAI,CAAC/C,qBALjC;;AAOA,UAAIkD,SAAS,GAAGL,SAAS,CAACK,SAA1B;AAAA,UACIC,aAAa,GAAGN,SAAS,CAACM,aAD9B;AAAA,UAEIvD,WAAW,GAAGiD,SAAS,CAACjD,WAF5B;AAAA,UAGIvB,gBAAgB,GAAGwE,SAAS,CAACxE,gBAHjC;AAAA,UAIIgC,iBAAiB,GAAGwC,SAAS,CAACxC,iBAJlC;AAAA,UAKIvB,gBAAgB,GAAG+D,SAAS,CAAC/D,gBALjC;AAMA,UAAIsE,QAAQ,GAAG;AACbH,QAAAA,SAAS,EAAEJ;AADE,OAAf,CAd6D,CAgB1D;;AAEH,UAAIK,SAAS,KAAKD,SAAS,CAACC,SAA5B,EAAuC;AACrCE,QAAAA,QAAQ,CAACrD,OAAT,GAAmBmD,SAAS,CAACG,GAAV,CAAc,UAAUC,KAAV,EAAiB;AAChD,cAAIrG,KAAK,GAAGqG,KAAK,CAACrG,KAAlB;AACA,iBAAOkG,aAAa,CAAClG,KAAD,CAApB;AACD,SAHkB,EAGhBxC,MAHgB,CAGT,UAAU8I,MAAV,EAAkB;AAC1B,iBAAOA,MAAP;AACD,SALkB,EAKhBF,GALgB,CAKZ,UAAUG,KAAV,EAAiB;AACtB,cAAI1I,GAAG,GAAG0I,KAAK,CAAC1I,GAAhB;AACA,iBAAOA,GAAP;AACD,SARkB,CAAnB;AASD,OA5B4D,CA4B3D;;;AAGF,UAAI,CAACuD,gBAAD,IAAqBgC,iBAArB,IAA0CA,iBAAiB,CAACnG,MAA5D,IAAsEmG,iBAAiB,KAAK4C,SAAS,CAAC5C,iBAA1G,EAA6H;AAC3H+C,QAAAA,QAAQ,CAACjF,eAAT,GAA2B9D,MAAM,CAACC,IAAP,CAAYsF,WAAZ,CAA3B;AACD,OAjC4D,CAiC3D;;;AAGF,UAAId,gBAAgB,IAAI,CAACmE,SAAS,CAACnE,gBAAnC,EAAqD;AACnDsE,QAAAA,QAAQ,CAACpD,qBAAT,GAAiC7B,eAAjC;AACD,OAFD,MAEO,IAAI,CAACW,gBAAD,IAAqBmE,SAAS,CAACnE,gBAA/B,IAAmD,CAACT,gBAAxD,EAA0E;AAC/E+E,QAAAA,QAAQ,CAACjF,eAAT,GAA2B6B,qBAAqB,IAAI,EAApD;AACAoD,QAAAA,QAAQ,CAACpD,qBAAT,GAAiC,EAAjC;AACD,OAzC4D,CAyC3D;;;AAGF,UAAIiD,SAAS,CAAC5E,gBAAV,KAA+BA,gBAAnC,EAAqD;AACnD+E,QAAAA,QAAQ,CAACjF,eAAT,GAA2BE,gBAA3B;AACD,OA9C4D,CA8C3D;;;AAGF,UAAIwE,SAAS,CAAChE,QAAd,EAAwB;AACtBuE,QAAAA,QAAQ,CAAC3E,UAAT,GAAsBA,UAAU,CAAChE,MAAX,CAAkB,UAAUK,GAAV,EAAe;AACrD,iBAAOA,GAAG,IAAI8E,WAAd;AACD,SAFqB,CAAtB;AAGD;;AAED,aAAOwD,QAAP;AACD;AA1DE,GAAD,CAzFQ,CAAZ;;AAsJA,SAAOpF,SAAP;AACD,CAhPD,CAgPEX,KAAK,CAACoG,SAhPR,CAFA;;AAoPA1I,eAAe,CAACiD,SAAD,EAAY,WAAZ,EAAyB;AACtCsB,EAAAA,SAAS,EAAEhC,SAAS,CAACoG,MADiB;AAEtC5E,EAAAA,gBAAgB,EAAExB,SAAS,CAACoG,MAFU;AAGtCR,EAAAA,SAAS,EAAE5F,SAAS,CAACqG,KAHiB;AAItC7C,EAAAA,qBAAqB,EAAExD,SAAS,CAACqG,KAJK;AAKtCR,EAAAA,aAAa,EAAE7F,SAAS,CAACsG,MALa;AAMtChE,EAAAA,WAAW,EAAEtC,SAAS,CAACsG,MANe;AAOtCtD,EAAAA,QAAQ,EAAEhD,SAAS,CAACuG,IAPkB;AAQtCtD,EAAAA,QAAQ,EAAEjD,SAAS,CAACuG,IARkB;AAStC5E,EAAAA,kBAAkB,EAAE3B,SAAS,CAACoG,MATQ;AAUtClD,EAAAA,aAAa,EAAElD,SAAS,CAACwG,SAAV,CAAoB,CAACxG,SAAS,CAACuG,IAAX,EAAiBvG,SAAS,CAACyG,IAA3B,CAApB,CAVuB;AAWtCtD,EAAAA,iBAAiB,EAAEnD,SAAS,CAACuG,IAXS;AAYtCnE,EAAAA,oBAAoB,EAAEpC,SAAS,CAACuG,IAZM;AAatClE,EAAAA,uBAAuB,EAAErC,SAAS,CAACqG,KAbG;AActCtF,EAAAA,gBAAgB,EAAEf,SAAS,CAACqG,KAdU;AAetC9E,EAAAA,QAAQ,EAAEvB,SAAS,CAACM,IAfkB;AAgBtC8C,EAAAA,QAAQ,EAAEpD,SAAS,CAACuG,IAhBkB;AAiBtCvF,EAAAA,YAAY,EAAEhB,SAAS,CAACM,IAjBc;AAkBtCwC,EAAAA,SAAS,EAAE9C,SAAS,CAACyG,IAlBiB;AAmBtC1D,EAAAA,iBAAiB,EAAE/C,SAAS,CAACyG,IAnBS;AAoBtCxE,EAAAA,eAAe,EAAEjC,SAAS,CAACyG,IApBW;AAqBtCpD,EAAAA,MAAM,EAAErD,SAAS,CAACoG,MArBoB;AAsBtC7C,EAAAA,YAAY,EAAEvD,SAAS,CAACwG,SAAV,CAAoB,CAACxG,SAAS,CAACyG,IAAX,EAAiBzG,SAAS,CAACM,IAA3B,CAApB,CAtBwB;AAuBtC;AACAgD,EAAAA,YAAY,EAAEtD,SAAS,CAACM,IAxBc;AAyBtCW,EAAAA,cAAc,EAAEjB,SAAS,CAACM;AAzBY,CAAzB,CAAf;;AA4BA7C,eAAe,CAACiD,SAAD,EAAY,cAAZ,EAA4B;AACzCiD,EAAAA,YAAY,EAAE3D,SAAS,CAAC0G,KAAV,CAAgBlK,aAAa,CAAC,EAAD,EAAK4D,iBAAL,CAA7B;AAD2B,CAA5B,CAAf;;AAIAH,QAAQ,CAACS,SAAD,CAAR;AACA,eAAeA,SAAf","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from 'rc-tree';\nimport { createRef } from '../util';\nexport var popupContextTypes = {\n  onPopupKeyDown: PropTypes.func.isRequired,\n  onTreeNodeSelect: PropTypes.func.isRequired,\n  onTreeNodeCheck: PropTypes.func.isRequired\n};\n\nvar BasePopup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasePopup, _React$Component);\n\n  function BasePopup(props) {\n    var _this;\n\n    _classCallCheck(this, BasePopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasePopup).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onTreeExpand\", function (expandedKeyList) {\n      var _this$props = _this.props,\n          treeExpandedKeys = _this$props.treeExpandedKeys,\n          onTreeExpand = _this$props.onTreeExpand,\n          onTreeExpanded = _this$props.onTreeExpanded; // Set uncontrolled state\n\n      if (!treeExpandedKeys) {\n        _this.setState({\n          expandedKeyList: expandedKeyList\n        }, onTreeExpanded);\n      }\n\n      if (onTreeExpand) {\n        onTreeExpand(expandedKeyList);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLoad\", function (loadedKeys) {\n      _this.setState({\n        loadedKeys: loadedKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTree\", function () {\n      return _this.treeRef.current;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLoadData\", function () {\n      var _this$props2 = _this.props,\n          loadData = _this$props2.loadData,\n          upperSearchValue = _this$props2.upperSearchValue;\n      if (upperSearchValue) return null;\n      return loadData;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterTreeNode\", function (treeNode) {\n      var _this$props3 = _this.props,\n          upperSearchValue = _this$props3.upperSearchValue,\n          treeNodeFilterProp = _this$props3.treeNodeFilterProp;\n      var filterVal = treeNode.props[treeNodeFilterProp];\n\n      if (typeof filterVal === 'string') {\n        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderNotFound\", function () {\n      var _this$props4 = _this.props,\n          prefixCls = _this$props4.prefixCls,\n          notFoundContent = _this$props4.notFoundContent;\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-not-found\")\n      }, notFoundContent);\n    });\n\n    var treeDefaultExpandAll = props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n        keyEntities = props.keyEntities; // TODO: make `expandedKeyList` control\n\n    var _expandedKeyList = treeDefaultExpandedKeys;\n\n    if (treeDefaultExpandAll) {\n      _expandedKeyList = Object.keys(keyEntities);\n    }\n\n    _this.state = {\n      keyList: [],\n      expandedKeyList: _expandedKeyList,\n      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedStateFromProps`\n      cachedExpandedKeyList: [],\n      // eslint-disable-line react/no-unused-state\n      loadedKeys: []\n    };\n    _this.treeRef = createRef();\n    return _this;\n  }\n\n  _createClass(BasePopup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          keyList = _this$state.keyList,\n          expandedKeyList = _this$state.expandedKeyList,\n          loadedKeys = _this$state.loadedKeys;\n      var _this$props5 = this.props,\n          prefixCls = _this$props5.prefixCls,\n          treeNodes = _this$props5.treeNodes,\n          filteredTreeNodes = _this$props5.filteredTreeNodes,\n          treeIcon = _this$props5.treeIcon,\n          treeLine = _this$props5.treeLine,\n          treeCheckable = _this$props5.treeCheckable,\n          treeCheckStrictly = _this$props5.treeCheckStrictly,\n          multiple = _this$props5.multiple,\n          ariaId = _this$props5.ariaId,\n          renderSearch = _this$props5.renderSearch,\n          switcherIcon = _this$props5.switcherIcon,\n          searchHalfCheckedKeys = _this$props5.searchHalfCheckedKeys;\n      var _this$context$rcTreeS = this.context.rcTreeSelect,\n          onPopupKeyDown = _this$context$rcTreeS.onPopupKeyDown,\n          onTreeNodeSelect = _this$context$rcTreeS.onTreeNodeSelect,\n          onTreeNodeCheck = _this$context$rcTreeS.onTreeNodeCheck;\n      var loadData = this.getLoadData();\n      var treeProps = {};\n\n      if (treeCheckable) {\n        treeProps.checkedKeys = keyList;\n      } else {\n        treeProps.selectedKeys = keyList;\n      }\n\n      var $notFound;\n      var $treeNodes;\n\n      if (filteredTreeNodes) {\n        if (filteredTreeNodes.length) {\n          treeProps.checkStrictly = true;\n          $treeNodes = filteredTreeNodes; // Fill halfCheckedKeys\n\n          if (treeCheckable && !treeCheckStrictly) {\n            treeProps.checkedKeys = {\n              checked: keyList,\n              halfChecked: searchHalfCheckedKeys\n            };\n          }\n        } else {\n          $notFound = this.renderNotFound();\n        }\n      } else if (!treeNodes || !treeNodes.length) {\n        $notFound = this.renderNotFound();\n      } else {\n        $treeNodes = treeNodes;\n      }\n\n      var $tree;\n\n      if ($notFound) {\n        $tree = $notFound;\n      } else {\n        $tree = React.createElement(Tree, _extends({\n          ref: this.treeRef,\n          prefixCls: \"\".concat(prefixCls, \"-tree\"),\n          showIcon: treeIcon,\n          showLine: treeLine,\n          selectable: !treeCheckable,\n          checkable: treeCheckable,\n          checkStrictly: treeCheckStrictly,\n          multiple: multiple,\n          loadData: loadData,\n          loadedKeys: loadedKeys,\n          expandedKeys: expandedKeyList,\n          filterTreeNode: this.filterTreeNode,\n          onSelect: onTreeNodeSelect,\n          onCheck: onTreeNodeCheck,\n          onExpand: this.onTreeExpand,\n          onLoad: this.onLoad,\n          switcherIcon: switcherIcon\n        }, treeProps), $treeNodes);\n      }\n\n      return React.createElement(\"div\", {\n        role: \"listbox\",\n        id: ariaId,\n        onKeyDown: onPopupKeyDown,\n        tabIndex: -1\n      }, renderSearch ? renderSearch() : null, $tree);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _ref = prevState || {},\n          _ref$prevProps = _ref.prevProps,\n          prevProps = _ref$prevProps === void 0 ? {} : _ref$prevProps,\n          loadedKeys = _ref.loadedKeys,\n          expandedKeyList = _ref.expandedKeyList,\n          cachedExpandedKeyList = _ref.cachedExpandedKeyList;\n\n      var valueList = nextProps.valueList,\n          valueEntities = nextProps.valueEntities,\n          keyEntities = nextProps.keyEntities,\n          treeExpandedKeys = nextProps.treeExpandedKeys,\n          filteredTreeNodes = nextProps.filteredTreeNodes,\n          upperSearchValue = nextProps.upperSearchValue;\n      var newState = {\n        prevProps: nextProps\n      }; // Check value update\n\n      if (valueList !== prevProps.valueList) {\n        newState.keyList = valueList.map(function (_ref2) {\n          var value = _ref2.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref3) {\n          var key = _ref3.key;\n          return key;\n        });\n      } // Show all when tree is in filter mode\n\n\n      if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n        newState.expandedKeyList = Object.keys(keyEntities);\n      } // Cache `expandedKeyList` when filter set\n\n\n      if (upperSearchValue && !prevProps.upperSearchValue) {\n        newState.cachedExpandedKeyList = expandedKeyList;\n      } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {\n        newState.expandedKeyList = cachedExpandedKeyList || [];\n        newState.cachedExpandedKeyList = [];\n      } // Use expandedKeys if provided\n\n\n      if (prevProps.treeExpandedKeys !== treeExpandedKeys) {\n        newState.expandedKeyList = treeExpandedKeys;\n      } // Clean loadedKeys if key not exist in keyEntities anymore\n\n\n      if (nextProps.loadData) {\n        newState.loadedKeys = loadedKeys.filter(function (key) {\n          return key in keyEntities;\n        });\n      }\n\n      return newState;\n    }\n  }]);\n\n  return BasePopup;\n}(React.Component);\n\n_defineProperty(BasePopup, \"propTypes\", {\n  prefixCls: PropTypes.string,\n  upperSearchValue: PropTypes.string,\n  valueList: PropTypes.array,\n  searchHalfCheckedKeys: PropTypes.array,\n  valueEntities: PropTypes.object,\n  keyEntities: PropTypes.object,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeNodeFilterProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  multiple: PropTypes.bool,\n  onTreeExpand: PropTypes.func,\n  treeNodes: PropTypes.node,\n  filteredTreeNodes: PropTypes.node,\n  notFoundContent: PropTypes.node,\n  ariaId: PropTypes.string,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  // HOC\n  renderSearch: PropTypes.func,\n  onTreeExpanded: PropTypes.func\n});\n\n_defineProperty(BasePopup, \"contextTypes\", {\n  rcTreeSelect: PropTypes.shape(_objectSpread({}, popupContextTypes))\n});\n\npolyfill(BasePopup);\nexport default BasePopup;"]},"metadata":{},"sourceType":"module"}