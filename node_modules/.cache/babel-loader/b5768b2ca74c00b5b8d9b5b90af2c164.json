{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport { polyfill } from 'react-lifecycles-compat';\nimport shallowEqual from 'shallowequal';\nimport TableRow from './TableRow';\nimport { remove } from './utils';\n\nvar ExpandableTable = function (_React$Component) {\n  _inherits(ExpandableTable, _React$Component);\n\n  function ExpandableTable(props) {\n    _classCallCheck(this, ExpandableTable);\n\n    var _this = _possibleConstructorReturn(this, (ExpandableTable.__proto__ || Object.getPrototypeOf(ExpandableTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var data = props.data,\n        childrenColumnName = props.childrenColumnName,\n        defaultExpandAllRows = props.defaultExpandAllRows,\n        expandedRowKeys = props.expandedRowKeys,\n        defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n        getRowKey = props.getRowKey;\n    var finnalExpandedRowKeys = [];\n    var rows = [].concat(_toConsumableArray(data));\n\n    if (defaultExpandAllRows) {\n      for (var i = 0; i < rows.length; i++) {\n        var row = rows[i];\n        finnalExpandedRowKeys.push(getRowKey(row, i));\n        rows = rows.concat(row[childrenColumnName] || []);\n      }\n    } else {\n      finnalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\n    }\n\n    _this.columnManager = props.columnManager;\n    _this.store = props.store;\n\n    _this.store.setState({\n      expandedRowsHeight: {},\n      expandedRowKeys: finnalExpandedRowKeys\n    });\n\n    return _this;\n  }\n\n  _createClass(ExpandableTable, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.handleUpdated();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if ('expandedRowKeys' in this.props) {\n        this.store.setState({\n          expandedRowKeys: this.props.expandedRowKeys\n        });\n      }\n\n      this.handleUpdated();\n    }\n  }, {\n    key: 'handleUpdated',\n    value: function handleUpdated() {\n      // We should record latest expanded rows to avoid multiple rows remove cause `onExpandedRowsChange` trigger many times\n      this.latestExpandedRows = null;\n    }\n  }, {\n    key: 'renderExpandedRow',\n    value: function renderExpandedRow(record, index, _render, className, ancestorKeys, indent, fixed) {\n      var _this2 = this;\n\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          expandIconAsCell = _props.expandIconAsCell,\n          indentSize = _props.indentSize;\n      var parentKey = ancestorKeys[ancestorKeys.length - 1];\n      var rowKey = parentKey + '-extra-row';\n      var components = {\n        body: {\n          row: 'tr',\n          cell: 'td'\n        }\n      };\n      var colCount = void 0;\n\n      if (fixed === 'left') {\n        colCount = this.columnManager.leftLeafColumns().length;\n      } else if (fixed === 'right') {\n        colCount = this.columnManager.rightLeafColumns().length;\n      } else {\n        colCount = this.columnManager.leafColumns().length;\n      }\n\n      var columns = [{\n        key: 'extra-row',\n        render: function render() {\n          var _store$getState = _this2.store.getState(),\n              expandedRowKeys = _store$getState.expandedRowKeys;\n\n          var expanded = !!~expandedRowKeys.indexOf(parentKey);\n          return {\n            props: {\n              colSpan: colCount\n            },\n            children: fixed !== 'right' ? _render(record, index, indent, expanded) : '&nbsp;'\n          };\n        }\n      }];\n\n      if (expandIconAsCell && fixed !== 'right') {\n        columns.unshift({\n          key: 'expand-icon-placeholder',\n          render: function render() {\n            return null;\n          }\n        });\n      }\n\n      return React.createElement(TableRow, {\n        key: rowKey,\n        columns: columns,\n        className: className,\n        rowKey: rowKey,\n        ancestorKeys: ancestorKeys,\n        prefixCls: prefixCls + '-expanded-row',\n        indentSize: indentSize,\n        indent: indent,\n        fixed: fixed,\n        components: components,\n        expandedRow: true\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          data = _props2.data,\n          childrenColumnName = _props2.childrenColumnName,\n          children = _props2.children;\n      var needIndentSpaced = data.some(function (record) {\n        return record[childrenColumnName];\n      });\n      return children({\n        props: this.props,\n        needIndentSpaced: needIndentSpaced,\n        renderRows: this.renderRows,\n        handleExpandChange: this.handleExpandChange,\n        renderExpandIndentCell: this.renderExpandIndentCell\n      });\n    }\n  }]);\n\n  return ExpandableTable;\n}(React.Component);\n\nExpandableTable.propTypes = {\n  expandIconAsCell: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  expandedRowClassName: PropTypes.func,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  expandIconColumnIndex: PropTypes.number,\n  expandedRowRender: PropTypes.func,\n  expandIcon: PropTypes.func,\n  childrenColumnName: PropTypes.string,\n  indentSize: PropTypes.number,\n  onExpand: PropTypes.func,\n  onExpandedRowsChange: PropTypes.func,\n  columnManager: PropTypes.object.isRequired,\n  store: PropTypes.object.isRequired,\n  prefixCls: PropTypes.string.isRequired,\n  data: PropTypes.array,\n  children: PropTypes.func.isRequired,\n  getRowKey: PropTypes.func.isRequired\n};\nExpandableTable.defaultProps = {\n  expandIconAsCell: false,\n  expandedRowClassName: function expandedRowClassName() {\n    return '';\n  },\n  expandIconColumnIndex: 0,\n  defaultExpandAllRows: false,\n  defaultExpandedRowKeys: [],\n  childrenColumnName: 'children',\n  indentSize: 15,\n  onExpand: function onExpand() {},\n  onExpandedRowsChange: function onExpandedRowsChange() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleExpandChange = function (expanded, record, event, rowKey) {\n    var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    var _props3 = _this3.props,\n        onExpandedRowsChange = _props3.onExpandedRowsChange,\n        onExpand = _props3.onExpand;\n\n    var _store$getState2 = _this3.store.getState(),\n        expandedRowKeys = _store$getState2.expandedRowKeys;\n\n    if (expanded) {\n      // row was expanded\n      expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\n    } else {\n      // row was collapse\n      var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\n\n      if (expandedRowIndex !== -1) {\n        expandedRowKeys = remove(expandedRowKeys, rowKey);\n      }\n    }\n\n    if (!_this3.props.expandedRowKeys) {\n      _this3.store.setState({\n        expandedRowKeys: expandedRowKeys\n      });\n    } // De-dup of repeat call\n\n\n    if (!_this3.latestExpandedRows || !shallowEqual(_this3.latestExpandedRows, expandedRowKeys)) {\n      _this3.latestExpandedRows = expandedRowKeys;\n      onExpandedRowsChange(expandedRowKeys);\n    }\n\n    if (!destroy) {\n      onExpand(expanded, record);\n    }\n  };\n\n  this.renderExpandIndentCell = function (rows, fixed) {\n    var _props4 = _this3.props,\n        prefixCls = _props4.prefixCls,\n        expandIconAsCell = _props4.expandIconAsCell;\n\n    if (!expandIconAsCell || fixed === 'right' || !rows.length) {\n      return;\n    }\n\n    var iconColumn = {\n      key: 'rc-table-expand-icon-cell',\n      className: prefixCls + '-expand-icon-th',\n      title: '',\n      rowSpan: rows.length\n    };\n    rows[0].unshift(_extends({}, iconColumn, {\n      column: iconColumn\n    }));\n  };\n\n  this.renderRows = function (renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\n    var _props5 = _this3.props,\n        expandedRowClassName = _props5.expandedRowClassName,\n        expandedRowRender = _props5.expandedRowRender,\n        childrenColumnName = _props5.childrenColumnName;\n    var childrenData = record[childrenColumnName];\n    var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\n    var nextIndent = indent + 1;\n\n    if (expandedRowRender) {\n      rows.push(_this3.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\n    }\n\n    if (childrenData) {\n      rows.push.apply(rows, _toConsumableArray(renderRows(childrenData, nextIndent, nextAncestorKeys)));\n    }\n  };\n};\n\npolyfill(ExpandableTable);\nexport default connect()(ExpandableTable);","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-table/es/ExpandableTable.js"],"names":["_extends","_toConsumableArray","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","connect","polyfill","shallowEqual","TableRow","remove","ExpandableTable","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","_initialiseProps","data","childrenColumnName","defaultExpandAllRows","expandedRowKeys","defaultExpandedRowKeys","getRowKey","finnalExpandedRowKeys","rows","concat","i","length","row","push","columnManager","store","setState","expandedRowsHeight","key","value","componentDidMount","handleUpdated","componentDidUpdate","latestExpandedRows","renderExpandedRow","record","index","_render","className","ancestorKeys","indent","fixed","_this2","_props","prefixCls","expandIconAsCell","indentSize","parentKey","rowKey","components","body","cell","colCount","leftLeafColumns","rightLeafColumns","leafColumns","columns","render","_store$getState","getState","expanded","indexOf","colSpan","children","unshift","createElement","expandedRow","_props2","needIndentSpaced","some","renderRows","handleExpandChange","renderExpandIndentCell","Component","propTypes","bool","array","expandedRowClassName","func","expandIconColumnIndex","number","expandedRowRender","expandIcon","string","onExpand","onExpandedRowsChange","object","isRequired","defaultProps","_this3","event","destroy","arguments","undefined","preventDefault","stopPropagation","_props3","_store$getState2","expandedRowIndex","_props4","iconColumn","title","rowSpan","column","_props5","childrenData","nextAncestorKeys","nextIndent","apply"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport { polyfill } from 'react-lifecycles-compat';\nimport shallowEqual from 'shallowequal';\nimport TableRow from './TableRow';\nimport { remove } from './utils';\n\nvar ExpandableTable = function (_React$Component) {\n  _inherits(ExpandableTable, _React$Component);\n\n  function ExpandableTable(props) {\n    _classCallCheck(this, ExpandableTable);\n\n    var _this = _possibleConstructorReturn(this, (ExpandableTable.__proto__ || Object.getPrototypeOf(ExpandableTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var data = props.data,\n        childrenColumnName = props.childrenColumnName,\n        defaultExpandAllRows = props.defaultExpandAllRows,\n        expandedRowKeys = props.expandedRowKeys,\n        defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n        getRowKey = props.getRowKey;\n\n\n    var finnalExpandedRowKeys = [];\n    var rows = [].concat(_toConsumableArray(data));\n\n    if (defaultExpandAllRows) {\n      for (var i = 0; i < rows.length; i++) {\n        var row = rows[i];\n        finnalExpandedRowKeys.push(getRowKey(row, i));\n        rows = rows.concat(row[childrenColumnName] || []);\n      }\n    } else {\n      finnalExpandedRowKeys = expandedRowKeys || defaultExpandedRowKeys;\n    }\n\n    _this.columnManager = props.columnManager;\n    _this.store = props.store;\n\n    _this.store.setState({\n      expandedRowsHeight: {},\n      expandedRowKeys: finnalExpandedRowKeys\n    });\n    return _this;\n  }\n\n  _createClass(ExpandableTable, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.handleUpdated();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if ('expandedRowKeys' in this.props) {\n        this.store.setState({\n          expandedRowKeys: this.props.expandedRowKeys\n        });\n      }\n      this.handleUpdated();\n    }\n  }, {\n    key: 'handleUpdated',\n    value: function handleUpdated() {\n      // We should record latest expanded rows to avoid multiple rows remove cause `onExpandedRowsChange` trigger many times\n      this.latestExpandedRows = null;\n    }\n  }, {\n    key: 'renderExpandedRow',\n    value: function renderExpandedRow(record, index, _render, className, ancestorKeys, indent, fixed) {\n      var _this2 = this;\n\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          expandIconAsCell = _props.expandIconAsCell,\n          indentSize = _props.indentSize;\n\n      var parentKey = ancestorKeys[ancestorKeys.length - 1];\n      var rowKey = parentKey + '-extra-row';\n      var components = {\n        body: {\n          row: 'tr',\n          cell: 'td'\n        }\n      };\n      var colCount = void 0;\n      if (fixed === 'left') {\n        colCount = this.columnManager.leftLeafColumns().length;\n      } else if (fixed === 'right') {\n        colCount = this.columnManager.rightLeafColumns().length;\n      } else {\n        colCount = this.columnManager.leafColumns().length;\n      }\n      var columns = [{\n        key: 'extra-row',\n        render: function render() {\n          var _store$getState = _this2.store.getState(),\n              expandedRowKeys = _store$getState.expandedRowKeys;\n\n          var expanded = !!~expandedRowKeys.indexOf(parentKey);\n          return {\n            props: {\n              colSpan: colCount\n            },\n            children: fixed !== 'right' ? _render(record, index, indent, expanded) : '&nbsp;'\n          };\n        }\n      }];\n      if (expandIconAsCell && fixed !== 'right') {\n        columns.unshift({\n          key: 'expand-icon-placeholder',\n          render: function render() {\n            return null;\n          }\n        });\n      }\n\n      return React.createElement(TableRow, {\n        key: rowKey,\n        columns: columns,\n        className: className,\n        rowKey: rowKey,\n        ancestorKeys: ancestorKeys,\n        prefixCls: prefixCls + '-expanded-row',\n        indentSize: indentSize,\n        indent: indent,\n        fixed: fixed,\n        components: components,\n        expandedRow: true\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          data = _props2.data,\n          childrenColumnName = _props2.childrenColumnName,\n          children = _props2.children;\n\n      var needIndentSpaced = data.some(function (record) {\n        return record[childrenColumnName];\n      });\n\n      return children({\n        props: this.props,\n        needIndentSpaced: needIndentSpaced,\n        renderRows: this.renderRows,\n        handleExpandChange: this.handleExpandChange,\n        renderExpandIndentCell: this.renderExpandIndentCell\n      });\n    }\n  }]);\n\n  return ExpandableTable;\n}(React.Component);\n\nExpandableTable.propTypes = {\n  expandIconAsCell: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  expandedRowClassName: PropTypes.func,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  expandIconColumnIndex: PropTypes.number,\n  expandedRowRender: PropTypes.func,\n  expandIcon: PropTypes.func,\n  childrenColumnName: PropTypes.string,\n  indentSize: PropTypes.number,\n  onExpand: PropTypes.func,\n  onExpandedRowsChange: PropTypes.func,\n  columnManager: PropTypes.object.isRequired,\n  store: PropTypes.object.isRequired,\n  prefixCls: PropTypes.string.isRequired,\n  data: PropTypes.array,\n  children: PropTypes.func.isRequired,\n  getRowKey: PropTypes.func.isRequired\n};\nExpandableTable.defaultProps = {\n  expandIconAsCell: false,\n  expandedRowClassName: function expandedRowClassName() {\n    return '';\n  },\n  expandIconColumnIndex: 0,\n  defaultExpandAllRows: false,\n  defaultExpandedRowKeys: [],\n  childrenColumnName: 'children',\n  indentSize: 15,\n  onExpand: function onExpand() {},\n  onExpandedRowsChange: function onExpandedRowsChange() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleExpandChange = function (expanded, record, event, rowKey) {\n    var destroy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    var _props3 = _this3.props,\n        onExpandedRowsChange = _props3.onExpandedRowsChange,\n        onExpand = _props3.onExpand;\n\n    var _store$getState2 = _this3.store.getState(),\n        expandedRowKeys = _store$getState2.expandedRowKeys;\n\n    if (expanded) {\n      // row was expanded\n      expandedRowKeys = [].concat(_toConsumableArray(expandedRowKeys), [rowKey]);\n    } else {\n      // row was collapse\n      var expandedRowIndex = expandedRowKeys.indexOf(rowKey);\n      if (expandedRowIndex !== -1) {\n        expandedRowKeys = remove(expandedRowKeys, rowKey);\n      }\n    }\n\n    if (!_this3.props.expandedRowKeys) {\n      _this3.store.setState({ expandedRowKeys: expandedRowKeys });\n    }\n\n    // De-dup of repeat call\n    if (!_this3.latestExpandedRows || !shallowEqual(_this3.latestExpandedRows, expandedRowKeys)) {\n      _this3.latestExpandedRows = expandedRowKeys;\n      onExpandedRowsChange(expandedRowKeys);\n    }\n    if (!destroy) {\n      onExpand(expanded, record);\n    }\n  };\n\n  this.renderExpandIndentCell = function (rows, fixed) {\n    var _props4 = _this3.props,\n        prefixCls = _props4.prefixCls,\n        expandIconAsCell = _props4.expandIconAsCell;\n\n    if (!expandIconAsCell || fixed === 'right' || !rows.length) {\n      return;\n    }\n\n    var iconColumn = {\n      key: 'rc-table-expand-icon-cell',\n      className: prefixCls + '-expand-icon-th',\n      title: '',\n      rowSpan: rows.length\n    };\n\n    rows[0].unshift(_extends({}, iconColumn, { column: iconColumn }));\n  };\n\n  this.renderRows = function (renderRows, rows, record, index, indent, fixed, parentKey, ancestorKeys) {\n    var _props5 = _this3.props,\n        expandedRowClassName = _props5.expandedRowClassName,\n        expandedRowRender = _props5.expandedRowRender,\n        childrenColumnName = _props5.childrenColumnName;\n\n    var childrenData = record[childrenColumnName];\n    var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);\n    var nextIndent = indent + 1;\n\n    if (expandedRowRender) {\n      rows.push(_this3.renderExpandedRow(record, index, expandedRowRender, expandedRowClassName(record, index, indent), nextAncestorKeys, nextIndent, fixed));\n    }\n\n    if (childrenData) {\n      rows.push.apply(rows, _toConsumableArray(renderRows(childrenData, nextIndent, nextAncestorKeys)));\n    }\n  };\n};\n\npolyfill(ExpandableTable);\n\nexport default connect()(ExpandableTable);"]},"metadata":{},"sourceType":"module"}