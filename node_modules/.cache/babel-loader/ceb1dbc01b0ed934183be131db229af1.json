{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\nexport default function HeadTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll,\n      showHeader = _table$props.showHeader;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      handleBodyScrollLeft = props.handleBodyScrollLeft,\n      expander = props.expander;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n  var headStyle = {};\n\n  if (scroll.y) {\n    useFixedHeader = true; // Add negative margin bottom for scroll bar overflow bug\n\n    var scrollbarWidth = measureScrollbar('horizontal');\n\n    if (scrollbarWidth > 0 && !fixed) {\n      headStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      headStyle.paddingBottom = '0px';\n    }\n  }\n\n  if (!useFixedHeader || !showHeader) {\n    return null;\n  }\n\n  return React.createElement('div', {\n    key: 'headTable',\n    ref: fixed ? null : saveRef('headTable'),\n    className: prefixCls + '-header',\n    style: headStyle,\n    onScroll: handleBodyScrollLeft\n  }, React.createElement(BaseTable, {\n    tableClassName: tableClassName,\n    hasHead: true,\n    hasBody: false,\n    fixed: fixed,\n    columns: columns,\n    expander: expander\n  }));\n}\nHeadTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleBodyScrollLeft: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired\n};\nHeadTable.contextTypes = {\n  table: PropTypes.any\n};","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-table/es/HeadTable.js"],"names":["React","PropTypes","measureScrollbar","BaseTable","HeadTable","props","_ref","table","_table$props","prefixCls","scroll","showHeader","columns","fixed","tableClassName","handleBodyScrollLeft","expander","saveRef","useFixedHeader","headStyle","y","scrollbarWidth","marginBottom","paddingBottom","createElement","key","ref","className","style","onScroll","hasHead","hasBody","propTypes","oneOfType","string","bool","array","isRequired","func","object","contextTypes","any"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AAC7C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,MAAIC,YAAY,GAAGD,KAAK,CAACF,KAAzB;AAAA,MACII,SAAS,GAAGD,YAAY,CAACC,SAD7B;AAAA,MAEIC,MAAM,GAAGF,YAAY,CAACE,MAF1B;AAAA,MAGIC,UAAU,GAAGH,YAAY,CAACG,UAH9B;AAIA,MAAIC,OAAO,GAAGP,KAAK,CAACO,OAApB;AAAA,MACIC,KAAK,GAAGR,KAAK,CAACQ,KADlB;AAAA,MAEIC,cAAc,GAAGT,KAAK,CAACS,cAF3B;AAAA,MAGIC,oBAAoB,GAAGV,KAAK,CAACU,oBAHjC;AAAA,MAIIC,QAAQ,GAAGX,KAAK,CAACW,QAJrB;AAKA,MAAIC,OAAO,GAAGV,KAAK,CAACU,OAApB;AACA,MAAIC,cAAc,GAAGX,KAAK,CAACF,KAAN,CAAYa,cAAjC;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAIT,MAAM,CAACU,CAAX,EAAc;AACZF,IAAAA,cAAc,GAAG,IAAjB,CADY,CAEZ;;AACA,QAAIG,cAAc,GAAGnB,gBAAgB,CAAC,YAAD,CAArC;;AACA,QAAImB,cAAc,GAAG,CAAjB,IAAsB,CAACR,KAA3B,EAAkC;AAChCM,MAAAA,SAAS,CAACG,YAAV,GAAyB,MAAMD,cAAN,GAAuB,IAAhD;AACAF,MAAAA,SAAS,CAACI,aAAV,GAA0B,KAA1B;AACD;AACF;;AAED,MAAI,CAACL,cAAD,IAAmB,CAACP,UAAxB,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SAAOX,KAAK,CAACwB,aAAN,CACL,KADK,EAEL;AACEC,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,GAAG,EAAEb,KAAK,GAAG,IAAH,GAAUI,OAAO,CAAC,WAAD,CAF7B;AAGEU,IAAAA,SAAS,EAAElB,SAAS,GAAG,SAHzB;AAIEmB,IAAAA,KAAK,EAAET,SAJT;AAKEU,IAAAA,QAAQ,EAAEd;AALZ,GAFK,EASLf,KAAK,CAACwB,aAAN,CAAoBrB,SAApB,EAA+B;AAC7BW,IAAAA,cAAc,EAAEA,cADa;AAE7BgB,IAAAA,OAAO,EAAE,IAFoB;AAG7BC,IAAAA,OAAO,EAAE,KAHoB;AAI7BlB,IAAAA,KAAK,EAAEA,KAJsB;AAK7BD,IAAAA,OAAO,EAAEA,OALoB;AAM7BI,IAAAA,QAAQ,EAAEA;AANmB,GAA/B,CATK,CAAP;AAkBD;AAEDZ,SAAS,CAAC4B,SAAV,GAAsB;AACpBnB,EAAAA,KAAK,EAAEZ,SAAS,CAACgC,SAAV,CAAoB,CAAChC,SAAS,CAACiC,MAAX,EAAmBjC,SAAS,CAACkC,IAA7B,CAApB,CADa;AAEpBvB,EAAAA,OAAO,EAAEX,SAAS,CAACmC,KAAV,CAAgBC,UAFL;AAGpBvB,EAAAA,cAAc,EAAEb,SAAS,CAACiC,MAAV,CAAiBG,UAHb;AAIpBtB,EAAAA,oBAAoB,EAAEd,SAAS,CAACqC,IAAV,CAAeD,UAJjB;AAKpBrB,EAAAA,QAAQ,EAAEf,SAAS,CAACsC,MAAV,CAAiBF;AALP,CAAtB;AAQAjC,SAAS,CAACoC,YAAV,GAAyB;AACvBjC,EAAAA,KAAK,EAAEN,SAAS,CAACwC;AADM,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\n\nexport default function HeadTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll,\n      showHeader = _table$props.showHeader;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      handleBodyScrollLeft = props.handleBodyScrollLeft,\n      expander = props.expander;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n\n  var headStyle = {};\n\n  if (scroll.y) {\n    useFixedHeader = true;\n    // Add negative margin bottom for scroll bar overflow bug\n    var scrollbarWidth = measureScrollbar('horizontal');\n    if (scrollbarWidth > 0 && !fixed) {\n      headStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      headStyle.paddingBottom = '0px';\n    }\n  }\n\n  if (!useFixedHeader || !showHeader) {\n    return null;\n  }\n\n  return React.createElement(\n    'div',\n    {\n      key: 'headTable',\n      ref: fixed ? null : saveRef('headTable'),\n      className: prefixCls + '-header',\n      style: headStyle,\n      onScroll: handleBodyScrollLeft\n    },\n    React.createElement(BaseTable, {\n      tableClassName: tableClassName,\n      hasHead: true,\n      hasBody: false,\n      fixed: fixed,\n      columns: columns,\n      expander: expander\n    })\n  );\n}\n\nHeadTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleBodyScrollLeft: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired\n};\n\nHeadTable.contextTypes = {\n  table: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}