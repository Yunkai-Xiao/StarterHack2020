{"ast":null,"code":"'use strict'; // 19.1.2.1 Object.assign(target, source, ...)\n\nvar getKeys = require('./_object-keys');\n\nvar gOPS = require('./_object-gops');\n\nvar pIE = require('./_object-pie');\n\nvar toObject = require('./_to-object');\n\nvar IObject = require('./_iobject');\n\nvar $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {}; // eslint-disable-next-line no-undef\n\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n\n  return T;\n} : $assign;","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/babel-runtime/node_modules/core-js/library/modules/_object-assign.js"],"names":["getKeys","require","gOPS","pIE","toObject","IObject","$assign","Object","assign","module","exports","A","B","S","Symbol","K","split","forEach","k","keys","join","target","source","T","aLen","arguments","length","index","getSymbols","f","isEnum","concat","j","key","call"],"mappings":"AAAA,a,CACA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,eAAD,CAAjB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIK,OAAO,GAAGC,MAAM,CAACC,MAArB,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAACJ,OAAD,IAAYL,OAAO,CAAC,UAAD,CAAP,CAAoB,YAAY;AAC3D,MAAIU,CAAC,GAAG,EAAR;AACA,MAAIC,CAAC,GAAG,EAAR,CAF2D,CAG3D;;AACA,MAAIC,CAAC,GAAGC,MAAM,EAAd;AACA,MAAIC,CAAC,GAAG,sBAAR;AACAJ,EAAAA,CAAC,CAACE,CAAD,CAAD,GAAO,CAAP;AACAE,EAAAA,CAAC,CAACC,KAAF,CAAQ,EAAR,EAAYC,OAAZ,CAAoB,UAAUC,CAAV,EAAa;AAAEN,IAAAA,CAAC,CAACM,CAAD,CAAD,GAAOA,CAAP;AAAW,GAA9C;AACA,SAAOZ,OAAO,CAAC,EAAD,EAAKK,CAAL,CAAP,CAAeE,CAAf,KAAqB,CAArB,IAA0BN,MAAM,CAACY,IAAP,CAAYb,OAAO,CAAC,EAAD,EAAKM,CAAL,CAAnB,EAA4BQ,IAA5B,CAAiC,EAAjC,KAAwCL,CAAzE;AACD,CAT4B,CAAZ,GASZ,SAASP,MAAT,CAAgBa,MAAhB,EAAwBC,MAAxB,EAAgC;AAAE;AACrC,MAAIC,CAAC,GAAGnB,QAAQ,CAACiB,MAAD,CAAhB;AACA,MAAIG,IAAI,GAAGC,SAAS,CAACC,MAArB;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,UAAU,GAAG1B,IAAI,CAAC2B,CAAtB;AACA,MAAIC,MAAM,GAAG3B,GAAG,CAAC0B,CAAjB;;AACA,SAAOL,IAAI,GAAGG,KAAd,EAAqB;AACnB,QAAId,CAAC,GAAGR,OAAO,CAACoB,SAAS,CAACE,KAAK,EAAN,CAAV,CAAf;AACA,QAAIR,IAAI,GAAGS,UAAU,GAAG5B,OAAO,CAACa,CAAD,CAAP,CAAWkB,MAAX,CAAkBH,UAAU,CAACf,CAAD,CAA5B,CAAH,GAAsCb,OAAO,CAACa,CAAD,CAAlE;AACA,QAAIa,MAAM,GAAGP,IAAI,CAACO,MAAlB;AACA,QAAIM,CAAC,GAAG,CAAR;AACA,QAAIC,GAAJ;;AACA,WAAOP,MAAM,GAAGM,CAAhB;AAAmB,UAAIF,MAAM,CAACI,IAAP,CAAYrB,CAAZ,EAAeoB,GAAG,GAAGd,IAAI,CAACa,CAAC,EAAF,CAAzB,CAAJ,EAAqCT,CAAC,CAACU,GAAD,CAAD,GAASpB,CAAC,CAACoB,GAAD,CAAV;AAAxD;AACD;;AAAC,SAAOV,CAAP;AACH,CAvBgB,GAuBbjB,OAvBJ","sourcesContent":["'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n"]},"metadata":{},"sourceType":"script"}