{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* eslint react/prop-types: 0 */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport enhancer from './enhancer';\nimport { propTypes, defaultProps } from './types';\n\nvar Circle = function (_Component) {\n  _inherits(Circle, _Component);\n\n  function Circle() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Circle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.paths = {}, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Circle.prototype.getPathStyles = function getPathStyles(offset, percent, strokeColor, strokeWidth) {\n    var gapDegree = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var gapPosition = arguments[5];\n    var radius = 50 - strokeWidth / 2;\n    var beginPositionX = 0;\n    var beginPositionY = -radius;\n    var endPositionX = 0;\n    var endPositionY = -2 * radius;\n\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n\n      default:\n    }\n\n    var pathString = 'M 50,50 m ' + beginPositionX + ',' + beginPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + endPositionX + ',' + -endPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + -endPositionX + ',' + endPositionY;\n    var len = Math.PI * 2 * radius;\n    var pathStyle = {\n      stroke: strokeColor,\n      strokeDasharray: percent / 100 * (len - gapDegree) + 'px ' + len + 'px',\n      strokeDashoffset: '-' + (gapDegree / 2 + offset / 100 * (len - gapDegree)) + 'px',\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s' // eslint-disable-line\n\n    };\n    return {\n      pathString: pathString,\n      pathStyle: pathStyle\n    };\n  };\n\n  Circle.prototype.getStokeList = function getStokeList() {\n    var _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        percent = _props.percent,\n        strokeColor = _props.strokeColor,\n        strokeWidth = _props.strokeWidth,\n        strokeLinecap = _props.strokeLinecap,\n        gapDegree = _props.gapDegree,\n        gapPosition = _props.gapPosition;\n    var percentList = Array.isArray(percent) ? percent : [percent];\n    var strokeColorList = Array.isArray(strokeColor) ? strokeColor : [strokeColor];\n    var stackPtg = 0;\n    return percentList.map(function (ptg, index) {\n      var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n\n      var _getPathStyles = _this2.getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition),\n          pathString = _getPathStyles.pathString,\n          pathStyle = _getPathStyles.pathStyle;\n\n      stackPtg += ptg;\n      return React.createElement('path', {\n        key: index,\n        className: prefixCls + '-circle-path',\n        d: pathString,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: ptg === 0 ? 0 : strokeWidth,\n        fillOpacity: '0',\n        style: pathStyle,\n        ref: function ref(path) {\n          _this2.paths[index] = path;\n        }\n      });\n    });\n  };\n\n  Circle.prototype.render = function render() {\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        strokeWidth = _props2.strokeWidth,\n        trailWidth = _props2.trailWidth,\n        gapDegree = _props2.gapDegree,\n        gapPosition = _props2.gapPosition,\n        trailColor = _props2.trailColor,\n        strokeLinecap = _props2.strokeLinecap,\n        style = _props2.style,\n        className = _props2.className,\n        restProps = _objectWithoutProperties(_props2, ['prefixCls', 'strokeWidth', 'trailWidth', 'gapDegree', 'gapPosition', 'trailColor', 'strokeLinecap', 'style', 'className']);\n\n    var _getPathStyles2 = this.getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition),\n        pathString = _getPathStyles2.pathString,\n        pathStyle = _getPathStyles2.pathStyle;\n\n    delete restProps.percent;\n    delete restProps.strokeColor;\n    return React.createElement('svg', _extends({\n      className: prefixCls + '-circle ' + className,\n      viewBox: '0 0 100 100',\n      style: style\n    }, restProps), React.createElement('path', {\n      className: prefixCls + '-circle-trail',\n      d: pathString,\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      strokeWidth: trailWidth || strokeWidth,\n      fillOpacity: '0',\n      style: pathStyle\n    }), this.getStokeList());\n  };\n\n  return Circle;\n}(Component);\n\nCircle.propTypes = _extends({}, propTypes, {\n  gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n});\nCircle.defaultProps = _extends({}, defaultProps, {\n  gapPosition: 'top'\n});\nexport default enhancer(Circle);","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-progress/es/Circle.js"],"names":["_extends","_objectWithoutProperties","_classCallCheck","_possibleConstructorReturn","_inherits","React","Component","PropTypes","enhancer","propTypes","defaultProps","Circle","_Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","paths","prototype","getPathStyles","offset","percent","strokeColor","strokeWidth","gapDegree","undefined","gapPosition","radius","beginPositionX","beginPositionY","endPositionX","endPositionY","pathString","len","Math","PI","pathStyle","stroke","strokeDasharray","strokeDashoffset","transition","getStokeList","_this2","_props","props","prefixCls","strokeLinecap","percentList","isArray","strokeColorList","stackPtg","map","ptg","index","color","_getPathStyles","createElement","key","className","d","fillOpacity","style","ref","path","render","_props2","trailWidth","trailColor","restProps","_getPathStyles2","viewBox","oneOf"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* eslint react/prop-types: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport enhancer from './enhancer';\nimport { propTypes, defaultProps } from './types';\n\nvar Circle = function (_Component) {\n  _inherits(Circle, _Component);\n\n  function Circle() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Circle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.paths = {}, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Circle.prototype.getPathStyles = function getPathStyles(offset, percent, strokeColor, strokeWidth) {\n    var gapDegree = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var gapPosition = arguments[5];\n\n    var radius = 50 - strokeWidth / 2;\n    var beginPositionX = 0;\n    var beginPositionY = -radius;\n    var endPositionX = 0;\n    var endPositionY = -2 * radius;\n    switch (gapPosition) {\n      case 'left':\n        beginPositionX = -radius;\n        beginPositionY = 0;\n        endPositionX = 2 * radius;\n        endPositionY = 0;\n        break;\n      case 'right':\n        beginPositionX = radius;\n        beginPositionY = 0;\n        endPositionX = -2 * radius;\n        endPositionY = 0;\n        break;\n      case 'bottom':\n        beginPositionY = radius;\n        endPositionY = 2 * radius;\n        break;\n      default:\n    }\n    var pathString = 'M 50,50 m ' + beginPositionX + ',' + beginPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + endPositionX + ',' + -endPositionY + '\\n     a ' + radius + ',' + radius + ' 0 1 1 ' + -endPositionX + ',' + endPositionY;\n    var len = Math.PI * 2 * radius;\n\n    var pathStyle = {\n      stroke: strokeColor,\n      strokeDasharray: percent / 100 * (len - gapDegree) + 'px ' + len + 'px',\n      strokeDashoffset: '-' + (gapDegree / 2 + offset / 100 * (len - gapDegree)) + 'px',\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s' // eslint-disable-line\n    };\n\n    return {\n      pathString: pathString,\n      pathStyle: pathStyle\n    };\n  };\n\n  Circle.prototype.getStokeList = function getStokeList() {\n    var _this2 = this;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        percent = _props.percent,\n        strokeColor = _props.strokeColor,\n        strokeWidth = _props.strokeWidth,\n        strokeLinecap = _props.strokeLinecap,\n        gapDegree = _props.gapDegree,\n        gapPosition = _props.gapPosition;\n\n    var percentList = Array.isArray(percent) ? percent : [percent];\n    var strokeColorList = Array.isArray(strokeColor) ? strokeColor : [strokeColor];\n\n    var stackPtg = 0;\n    return percentList.map(function (ptg, index) {\n      var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];\n\n      var _getPathStyles = _this2.getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition),\n          pathString = _getPathStyles.pathString,\n          pathStyle = _getPathStyles.pathStyle;\n\n      stackPtg += ptg;\n\n      return React.createElement('path', {\n        key: index,\n        className: prefixCls + '-circle-path',\n        d: pathString,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: ptg === 0 ? 0 : strokeWidth,\n        fillOpacity: '0',\n        style: pathStyle,\n        ref: function ref(path) {\n          _this2.paths[index] = path;\n        }\n      });\n    });\n  };\n\n  Circle.prototype.render = function render() {\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        strokeWidth = _props2.strokeWidth,\n        trailWidth = _props2.trailWidth,\n        gapDegree = _props2.gapDegree,\n        gapPosition = _props2.gapPosition,\n        trailColor = _props2.trailColor,\n        strokeLinecap = _props2.strokeLinecap,\n        style = _props2.style,\n        className = _props2.className,\n        restProps = _objectWithoutProperties(_props2, ['prefixCls', 'strokeWidth', 'trailWidth', 'gapDegree', 'gapPosition', 'trailColor', 'strokeLinecap', 'style', 'className']);\n\n    var _getPathStyles2 = this.getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition),\n        pathString = _getPathStyles2.pathString,\n        pathStyle = _getPathStyles2.pathStyle;\n\n    delete restProps.percent;\n    delete restProps.strokeColor;\n    return React.createElement(\n      'svg',\n      _extends({\n        className: prefixCls + '-circle ' + className,\n        viewBox: '0 0 100 100',\n        style: style\n      }, restProps),\n      React.createElement('path', {\n        className: prefixCls + '-circle-trail',\n        d: pathString,\n        stroke: trailColor,\n        strokeLinecap: strokeLinecap,\n        strokeWidth: trailWidth || strokeWidth,\n        fillOpacity: '0',\n        style: pathStyle\n      }),\n      this.getStokeList()\n    );\n  };\n\n  return Circle;\n}(Component);\n\nCircle.propTypes = _extends({}, propTypes, {\n  gapPosition: PropTypes.oneOf(['top', 'bottom', 'left', 'right'])\n});\n\nCircle.defaultProps = _extends({}, defaultProps, {\n  gapPosition: 'top'\n});\n\nexport default enhancer(Circle);"]},"metadata":{},"sourceType":"module"}