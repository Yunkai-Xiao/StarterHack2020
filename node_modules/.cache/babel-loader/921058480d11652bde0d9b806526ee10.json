{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\n/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\n\nimport PropTypes from 'prop-types';\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\n\nexport var treeContextTypes = {\n  rcTree: PropTypes.shape({\n    root: PropTypes.object,\n    prefixCls: PropTypes.string,\n    selectable: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    draggable: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    checkStrictly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    loadData: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    renderTreeNode: PropTypes.func,\n    isKeyChecked: PropTypes.func,\n    onNodeClick: PropTypes.func,\n    onNodeDoubleClick: PropTypes.func,\n    onNodeExpand: PropTypes.func,\n    onNodeSelect: PropTypes.func,\n    onNodeCheck: PropTypes.func,\n    onNodeMouseEnter: PropTypes.func,\n    onNodeMouseLeave: PropTypes.func,\n    onNodeContextMenu: PropTypes.func,\n    onNodeDragStart: PropTypes.func,\n    onNodeDragEnter: PropTypes.func,\n    onNodeDragOver: PropTypes.func,\n    onNodeDragLeave: PropTypes.func,\n    onNodeDragEnd: PropTypes.func,\n    onNodeDrop: PropTypes.func // TODO: Remove this\n    // onBatchNodeCheck: PropTypes.func,\n    // onCheckConductFinished: PropTypes.func,\n    // Tree will store the entities when the treeNode refresh.\n    // User can pass the func to add more info to customize the additional info.\n    // processTreeEntity: PropTypes.func,\n\n  })\n};\nexport var nodeContextTypes = _extends({}, treeContextTypes, {\n  rcTreeNode: PropTypes.shape({\n    onUpCheckConduct: PropTypes.func\n  })\n});","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-tree/es/contextTypes.js"],"names":["_extends","PropTypes","treeContextTypes","rcTree","shape","root","object","prefixCls","string","selectable","bool","showIcon","icon","oneOfType","node","func","draggable","checkable","checkStrictly","disabled","openTransitionName","openAnimation","loadData","filterTreeNode","renderTreeNode","isKeyChecked","onNodeClick","onNodeDoubleClick","onNodeExpand","onNodeSelect","onNodeCheck","onNodeMouseEnter","onNodeMouseLeave","onNodeContextMenu","onNodeDragStart","onNodeDragEnter","onNodeDragOver","onNodeDragLeave","onNodeDragEnd","onNodeDrop","nodeContextTypes","rcTreeNode","onUpCheckConduct"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA;;;;;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;;AAIA,OAAO,IAAIC,gBAAgB,GAAG;AAC5BC,EAAAA,MAAM,EAAEF,SAAS,CAACG,KAAV,CAAgB;AACtBC,IAAAA,IAAI,EAAEJ,SAAS,CAACK,MADM;AAGtBC,IAAAA,SAAS,EAAEN,SAAS,CAACO,MAHC;AAItBC,IAAAA,UAAU,EAAER,SAAS,CAACS,IAJA;AAKtBC,IAAAA,QAAQ,EAAEV,SAAS,CAACS,IALE;AAMtBE,IAAAA,IAAI,EAAEX,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,IAAX,EAAiBb,SAAS,CAACc,IAA3B,CAApB,CANgB;AAOtBC,IAAAA,SAAS,EAAEf,SAAS,CAACS,IAPC;AAQtBO,IAAAA,SAAS,EAAEhB,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACS,IAAX,EAAiBT,SAAS,CAACa,IAA3B,CAApB,CARW;AAStBI,IAAAA,aAAa,EAAEjB,SAAS,CAACS,IATH;AAUtBS,IAAAA,QAAQ,EAAElB,SAAS,CAACS,IAVE;AAWtBU,IAAAA,kBAAkB,EAAEnB,SAAS,CAACO,MAXR;AAYtBa,IAAAA,aAAa,EAAEpB,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACO,MAAX,EAAmBP,SAAS,CAACK,MAA7B,CAApB,CAZO;AActBgB,IAAAA,QAAQ,EAAErB,SAAS,CAACc,IAdE;AAetBQ,IAAAA,cAAc,EAAEtB,SAAS,CAACc,IAfJ;AAgBtBS,IAAAA,cAAc,EAAEvB,SAAS,CAACc,IAhBJ;AAkBtBU,IAAAA,YAAY,EAAExB,SAAS,CAACc,IAlBF;AAoBtBW,IAAAA,WAAW,EAAEzB,SAAS,CAACc,IApBD;AAqBtBY,IAAAA,iBAAiB,EAAE1B,SAAS,CAACc,IArBP;AAsBtBa,IAAAA,YAAY,EAAE3B,SAAS,CAACc,IAtBF;AAuBtBc,IAAAA,YAAY,EAAE5B,SAAS,CAACc,IAvBF;AAwBtBe,IAAAA,WAAW,EAAE7B,SAAS,CAACc,IAxBD;AAyBtBgB,IAAAA,gBAAgB,EAAE9B,SAAS,CAACc,IAzBN;AA0BtBiB,IAAAA,gBAAgB,EAAE/B,SAAS,CAACc,IA1BN;AA2BtBkB,IAAAA,iBAAiB,EAAEhC,SAAS,CAACc,IA3BP;AA4BtBmB,IAAAA,eAAe,EAAEjC,SAAS,CAACc,IA5BL;AA6BtBoB,IAAAA,eAAe,EAAElC,SAAS,CAACc,IA7BL;AA8BtBqB,IAAAA,cAAc,EAAEnC,SAAS,CAACc,IA9BJ;AA+BtBsB,IAAAA,eAAe,EAAEpC,SAAS,CAACc,IA/BL;AAgCtBuB,IAAAA,aAAa,EAAErC,SAAS,CAACc,IAhCH;AAiCtBwB,IAAAA,UAAU,EAAEtC,SAAS,CAACc,IAjCA,CAmCtB;AACA;AACA;AAEA;AACA;AACA;;AAzCsB,GAAhB;AADoB,CAAvB;AA8CP,OAAO,IAAIyB,gBAAgB,GAAGxC,QAAQ,CAAC,EAAD,EAAKE,gBAAL,EAAuB;AAC3DuC,EAAAA,UAAU,EAAExC,SAAS,CAACG,KAAV,CAAgB;AAC1BsC,IAAAA,gBAAgB,EAAEzC,SAAS,CAACc;AADF,GAAhB;AAD+C,CAAvB,CAA/B","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\n/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\n\nimport PropTypes from 'prop-types';\n\n/**\n * Thought we still use `cloneElement` to pass `key`,\n * other props can pass with context for future refactor.\n */\nexport var treeContextTypes = {\n  rcTree: PropTypes.shape({\n    root: PropTypes.object,\n\n    prefixCls: PropTypes.string,\n    selectable: PropTypes.bool,\n    showIcon: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    draggable: PropTypes.bool,\n    checkable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n    checkStrictly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    openTransitionName: PropTypes.string,\n    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    loadData: PropTypes.func,\n    filterTreeNode: PropTypes.func,\n    renderTreeNode: PropTypes.func,\n\n    isKeyChecked: PropTypes.func,\n\n    onNodeClick: PropTypes.func,\n    onNodeDoubleClick: PropTypes.func,\n    onNodeExpand: PropTypes.func,\n    onNodeSelect: PropTypes.func,\n    onNodeCheck: PropTypes.func,\n    onNodeMouseEnter: PropTypes.func,\n    onNodeMouseLeave: PropTypes.func,\n    onNodeContextMenu: PropTypes.func,\n    onNodeDragStart: PropTypes.func,\n    onNodeDragEnter: PropTypes.func,\n    onNodeDragOver: PropTypes.func,\n    onNodeDragLeave: PropTypes.func,\n    onNodeDragEnd: PropTypes.func,\n    onNodeDrop: PropTypes.func\n\n    // TODO: Remove this\n    // onBatchNodeCheck: PropTypes.func,\n    // onCheckConductFinished: PropTypes.func,\n\n    // Tree will store the entities when the treeNode refresh.\n    // User can pass the func to add more info to customize the additional info.\n    // processTreeEntity: PropTypes.func,\n  })\n};\n\nexport var nodeContextTypes = _extends({}, treeContextTypes, {\n  rcTreeNode: PropTypes.shape({\n    onUpCheckConduct: PropTypes.func\n  })\n});"]},"metadata":{},"sourceType":"module"}