{"ast":null,"code":"function getError(option, xhr) {\n  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\\'';\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = 'post';\n  err.url = option.action;\n  return err;\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n} // option {\n//  onProgress: (event: { percent: number }): void,\n//  onError: (event: Error, body?: Object): void,\n//  onSuccess: (body: Object): void,\n//  data: Object,\n//  filename: String,\n//  file: File,\n//  withCredentials: Boolean,\n//  action: String,\n//  headers: Object,\n// }\n\n\nexport default function upload(option) {\n  var xhr = new XMLHttpRequest();\n\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n\n      option.onProgress(e);\n    };\n  }\n\n  var formData = new FormData();\n\n  if (option.data) {\n    Object.keys(option.data).map(function (key) {\n      formData.append(key, option.data[key]);\n    });\n  }\n\n  formData.append(option.filename, option.file);\n\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n\n    option.onSuccess(getBody(xhr), xhr);\n  };\n\n  xhr.open('post', option.action, true); // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {}; // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  for (var h in headers) {\n    if (headers.hasOwnProperty(h) && headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  }\n\n  xhr.send(formData);\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-upload/es/request.js"],"names":["getError","option","xhr","msg","action","status","err","Error","method","url","getBody","text","responseText","response","JSON","parse","e","upload","XMLHttpRequest","onProgress","onprogress","progress","total","percent","loaded","formData","FormData","data","Object","keys","map","key","append","filename","file","onerror","error","onError","onload","onSuccess","open","withCredentials","headers","setRequestHeader","h","hasOwnProperty","send","abort"],"mappings":"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","sourcesContent":["function getError(option, xhr) {\n  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\\'';\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = 'post';\n  err.url = option.action;\n  return err;\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\n// option {\n//  onProgress: (event: { percent: number }): void,\n//  onError: (event: Error, body?: Object): void,\n//  onSuccess: (body: Object): void,\n//  data: Object,\n//  filename: String,\n//  file: File,\n//  withCredentials: Boolean,\n//  action: String,\n//  headers: Object,\n// }\nexport default function upload(option) {\n  var xhr = new XMLHttpRequest();\n\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n      option.onProgress(e);\n    };\n  }\n\n  var formData = new FormData();\n\n  if (option.data) {\n    Object.keys(option.data).map(function (key) {\n      formData.append(key, option.data[key]);\n    });\n  }\n\n  formData.append(option.filename, option.file);\n\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n\n    option.onSuccess(getBody(xhr), xhr);\n  };\n\n  xhr.open('post', option.action, true);\n\n  // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {};\n\n  // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  for (var h in headers) {\n    if (headers.hasOwnProperty(h) && headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  }\n  xhr.send(formData);\n\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}