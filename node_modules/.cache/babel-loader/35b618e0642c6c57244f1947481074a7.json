{"ast":null,"code":"import utils from './utils';\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  } // Left edge inside and right edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  } // Right edge outside viewport, try to move it.\n\n\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  } // Top edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  } // Top edge inside and bottom edge outside viewport, try to resize it.\n\n\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  } // Bottom edge outside viewport, try to move it.\n\n\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nexport default adjustForViewport;","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/dom-align/es/adjustForViewport.js"],"names":["utils","adjustForViewport","elFuturePos","elRegion","visibleRect","overflow","pos","clone","size","width","height","adjustX","left","resizeWidth","right","Math","max","adjustY","top","resizeHeight","bottom","mix"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,SAASC,iBAAT,CAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,WAAlD,EAA+DC,QAA/D,EAAyE;AACvE,MAAIC,GAAG,GAAGN,KAAK,CAACO,KAAN,CAAYL,WAAZ,CAAV;AACA,MAAIM,IAAI,GAAG;AACTC,IAAAA,KAAK,EAAEN,QAAQ,CAACM,KADP;AAETC,IAAAA,MAAM,EAAEP,QAAQ,CAACO;AAFR,GAAX;;AAKA,MAAIL,QAAQ,CAACM,OAAT,IAAoBL,GAAG,CAACM,IAAJ,GAAWR,WAAW,CAACQ,IAA/C,EAAqD;AACnDN,IAAAA,GAAG,CAACM,IAAJ,GAAWR,WAAW,CAACQ,IAAvB;AACD,GATsE,CAWvE;;;AACA,MAAIP,QAAQ,CAACQ,WAAT,IAAwBP,GAAG,CAACM,IAAJ,IAAYR,WAAW,CAACQ,IAAhD,IAAwDN,GAAG,CAACM,IAAJ,GAAWJ,IAAI,CAACC,KAAhB,GAAwBL,WAAW,CAACU,KAAhG,EAAuG;AACrGN,IAAAA,IAAI,CAACC,KAAL,IAAcH,GAAG,CAACM,IAAJ,GAAWJ,IAAI,CAACC,KAAhB,GAAwBL,WAAW,CAACU,KAAlD;AACD,GAdsE,CAgBvE;;;AACA,MAAIT,QAAQ,CAACM,OAAT,IAAoBL,GAAG,CAACM,IAAJ,GAAWJ,IAAI,CAACC,KAAhB,GAAwBL,WAAW,CAACU,KAA5D,EAAmE;AACjE;AACAR,IAAAA,GAAG,CAACM,IAAJ,GAAWG,IAAI,CAACC,GAAL,CAASZ,WAAW,CAACU,KAAZ,GAAoBN,IAAI,CAACC,KAAlC,EAAyCL,WAAW,CAACQ,IAArD,CAAX;AACD,GApBsE,CAsBvE;;;AACA,MAAIP,QAAQ,CAACY,OAAT,IAAoBX,GAAG,CAACY,GAAJ,GAAUd,WAAW,CAACc,GAA9C,EAAmD;AACjDZ,IAAAA,GAAG,CAACY,GAAJ,GAAUd,WAAW,CAACc,GAAtB;AACD,GAzBsE,CA2BvE;;;AACA,MAAIb,QAAQ,CAACc,YAAT,IAAyBb,GAAG,CAACY,GAAJ,IAAWd,WAAW,CAACc,GAAhD,IAAuDZ,GAAG,CAACY,GAAJ,GAAUV,IAAI,CAACE,MAAf,GAAwBN,WAAW,CAACgB,MAA/F,EAAuG;AACrGZ,IAAAA,IAAI,CAACE,MAAL,IAAeJ,GAAG,CAACY,GAAJ,GAAUV,IAAI,CAACE,MAAf,GAAwBN,WAAW,CAACgB,MAAnD;AACD,GA9BsE,CAgCvE;;;AACA,MAAIf,QAAQ,CAACY,OAAT,IAAoBX,GAAG,CAACY,GAAJ,GAAUV,IAAI,CAACE,MAAf,GAAwBN,WAAW,CAACgB,MAA5D,EAAoE;AAClE;AACAd,IAAAA,GAAG,CAACY,GAAJ,GAAUH,IAAI,CAACC,GAAL,CAASZ,WAAW,CAACgB,MAAZ,GAAqBZ,IAAI,CAACE,MAAnC,EAA2CN,WAAW,CAACc,GAAvD,CAAV;AACD;;AAED,SAAOlB,KAAK,CAACqB,GAAN,CAAUf,GAAV,EAAeE,IAAf,CAAP;AACD;;AAED,eAAeP,iBAAf","sourcesContent":["import utils from './utils';\n\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n\n  // Left edge inside and right edge outside viewport, try to resize it.\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n\n  // Right edge outside viewport, try to move it.\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    // 保证左边界和可视区域左边界对齐\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n\n  // Top edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n\n  // Top edge inside and bottom edge outside viewport, try to resize it.\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n\n  // Bottom edge outside viewport, try to move it.\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    // 保证上边界和可视区域上边界对齐\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n\n  return utils.mix(pos, size);\n}\n\nexport default adjustForViewport;"]},"metadata":{},"sourceType":"module"}