{"ast":null,"code":"'use strict';\n\nvar fetchKeys = require('lodash.keys');\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = fetchKeys(objA);\n  var keysB = fetchKeys(objB);\n  var len = keysA.length;\n\n  if (len !== keysB.length) {\n    return false;\n  }\n\n  compareContext = compareContext || null; // Test for A's keys different from B.\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  for (var i = 0; i < len; i++) {\n    var key = keysA[i];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (_ret === false || _ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-util/node_modules/shallowequal/modules/index.js"],"names":["fetchKeys","require","module","exports","shallowEqual","objA","objB","compare","compareContext","ret","call","keysA","keysB","len","length","bHasOwnProperty","Object","prototype","hasOwnProperty","bind","i","key","valueA","valueB","_ret"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,OAAlC,EAA2CC,cAA3C,EAA2D;AAExE,MAAIC,GAAG,GAAGF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAaF,cAAb,EAA6BH,IAA7B,EAAmCC,IAAnC,CAAH,GAA8C,KAAK,CAApE;;AAEA,MAAIG,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAChB,WAAO,CAAC,CAACA,GAAT;AACH;;AAED,MAAIJ,IAAI,KAAKC,IAAb,EAAmB;AACf,WAAO,IAAP;AACH;;AAED,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IAA6C,OAAOC,IAAP,KAAgB,QAA7D,IAAyEA,IAAI,KAAK,IAAtF,EAA4F;AACxF,WAAO,KAAP;AACH;;AAED,MAAIK,KAAK,GAAGX,SAAS,CAACK,IAAD,CAArB;AACA,MAAIO,KAAK,GAAGZ,SAAS,CAACM,IAAD,CAArB;AAEA,MAAIO,GAAG,GAAGF,KAAK,CAACG,MAAhB;;AACA,MAAID,GAAG,KAAKD,KAAK,CAACE,MAAlB,EAA0B;AACtB,WAAO,KAAP;AACH;;AAEDN,EAAAA,cAAc,GAAGA,cAAc,IAAI,IAAnC,CAxBwE,CA0BxE;;AACA,MAAIO,eAAe,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCb,IAArC,CAAtB;;AACA,OAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,GAApB,EAAyBO,CAAC,EAA1B,EAA8B;AAC1B,QAAIC,GAAG,GAAGV,KAAK,CAACS,CAAD,CAAf;;AACA,QAAI,CAACL,eAAe,CAACM,GAAD,CAApB,EAA2B;AACvB,aAAO,KAAP;AACH;;AACD,QAAIC,MAAM,GAAGjB,IAAI,CAACgB,GAAD,CAAjB;AACA,QAAIE,MAAM,GAAGjB,IAAI,CAACe,GAAD,CAAjB;;AAEA,QAAIG,IAAI,GAAGjB,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAaF,cAAb,EAA6Bc,MAA7B,EAAqCC,MAArC,EAA6CF,GAA7C,CAAH,GAAuD,KAAK,CAA9E;;AACA,QAAIG,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAAK,CAAd,IAAmBF,MAAM,KAAKC,MAApD,EAA4D;AACxD,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH,CA3CD","sourcesContent":["'use strict';\n\nvar fetchKeys = require('lodash.keys');\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n\n    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n    if (ret !== void 0) {\n        return !!ret;\n    }\n\n    if (objA === objB) {\n        return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n        return false;\n    }\n\n    var keysA = fetchKeys(objA);\n    var keysB = fetchKeys(objB);\n\n    var len = keysA.length;\n    if (len !== keysB.length) {\n        return false;\n    }\n\n    compareContext = compareContext || null;\n\n    // Test for A's keys different from B.\n    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n    for (var i = 0; i < len; i++) {\n        var key = keysA[i];\n        if (!bHasOwnProperty(key)) {\n            return false;\n        }\n        var valueA = objA[key];\n        var valueB = objB[key];\n\n        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n        if (_ret === false || _ret === void 0 && valueA !== valueB) {\n            return false;\n        }\n    }\n\n    return true;\n};"]},"metadata":{},"sourceType":"script"}