{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\nexport default function BodyTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      getRowKey = props.getRowKey,\n      handleBodyScroll = props.handleBodyScroll,\n      handleWheel = props.handleWheel,\n      expander = props.expander,\n      isAnyColumnsFixed = props.isAnyColumnsFixed;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n\n  var bodyStyle = _extends({}, table.props.bodyStyle);\n\n  var innerBodyStyle = {};\n\n  if (scroll.x || fixed) {\n    bodyStyle.overflowX = bodyStyle.overflowX || 'scroll'; // Fix weired webkit render bug\n    // https://github.com/ant-design/ant-design/issues/7783\n\n    bodyStyle.WebkitTransform = 'translate3d (0, 0, 0)';\n  }\n\n  if (scroll.y) {\n    // maxHeight will make fixed-Table scrolling not working\n    // so we only set maxHeight to body-Table here\n    if (fixed) {\n      innerBodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;\n      innerBodyStyle.overflowY = bodyStyle.overflowY || 'scroll';\n    } else {\n      bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;\n    }\n\n    bodyStyle.overflowY = bodyStyle.overflowY || 'scroll';\n    useFixedHeader = true; // Add negative margin bottom for scroll bar overflow bug\n\n    var scrollbarWidth = measureScrollbar();\n\n    if (scrollbarWidth > 0 && fixed) {\n      bodyStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      bodyStyle.paddingBottom = '0px';\n    }\n  }\n\n  var baseTable = React.createElement(BaseTable, {\n    tableClassName: tableClassName,\n    hasHead: !useFixedHeader,\n    hasBody: true,\n    fixed: fixed,\n    columns: columns,\n    expander: expander,\n    getRowKey: getRowKey,\n    isAnyColumnsFixed: isAnyColumnsFixed\n  });\n\n  if (fixed && columns.length) {\n    var refName = void 0;\n\n    if (columns[0].fixed === 'left' || columns[0].fixed === true) {\n      refName = 'fixedColumnsBodyLeft';\n    } else if (columns[0].fixed === 'right') {\n      refName = 'fixedColumnsBodyRight';\n    }\n\n    delete bodyStyle.overflowX;\n    delete bodyStyle.overflowY;\n    return React.createElement('div', {\n      key: 'bodyTable',\n      className: prefixCls + '-body-outer',\n      style: _extends({}, bodyStyle)\n    }, React.createElement('div', {\n      className: prefixCls + '-body-inner',\n      style: innerBodyStyle,\n      ref: saveRef(refName),\n      onWheel: handleWheel,\n      onScroll: handleBodyScroll\n    }, baseTable));\n  }\n\n  return React.createElement('div', {\n    key: 'bodyTable',\n    className: prefixCls + '-body',\n    style: bodyStyle,\n    ref: saveRef('bodyTable'),\n    onWheel: handleWheel,\n    onScroll: handleBodyScroll\n  }, baseTable);\n}\nBodyTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleWheel: PropTypes.func.isRequired,\n  handleBodyScroll: PropTypes.func.isRequired,\n  getRowKey: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired,\n  isAnyColumnsFixed: PropTypes.bool\n};\nBodyTable.contextTypes = {\n  table: PropTypes.any\n};","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-table/es/BodyTable.js"],"names":["_extends","React","PropTypes","measureScrollbar","BaseTable","BodyTable","props","_ref","table","_table$props","prefixCls","scroll","columns","fixed","tableClassName","getRowKey","handleBodyScroll","handleWheel","expander","isAnyColumnsFixed","saveRef","useFixedHeader","bodyStyle","innerBodyStyle","x","overflowX","WebkitTransform","y","maxHeight","overflowY","scrollbarWidth","marginBottom","paddingBottom","baseTable","createElement","hasHead","hasBody","length","refName","key","className","style","ref","onWheel","onScroll","propTypes","oneOfType","string","bool","array","isRequired","func","object","contextTypes","any"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { measureScrollbar } from './utils';\nimport BaseTable from './BaseTable';\n\nexport default function BodyTable(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      scroll = _table$props.scroll;\n  var columns = props.columns,\n      fixed = props.fixed,\n      tableClassName = props.tableClassName,\n      getRowKey = props.getRowKey,\n      handleBodyScroll = props.handleBodyScroll,\n      handleWheel = props.handleWheel,\n      expander = props.expander,\n      isAnyColumnsFixed = props.isAnyColumnsFixed;\n  var saveRef = table.saveRef;\n  var useFixedHeader = table.props.useFixedHeader;\n\n  var bodyStyle = _extends({}, table.props.bodyStyle);\n  var innerBodyStyle = {};\n\n  if (scroll.x || fixed) {\n    bodyStyle.overflowX = bodyStyle.overflowX || 'scroll';\n    // Fix weired webkit render bug\n    // https://github.com/ant-design/ant-design/issues/7783\n    bodyStyle.WebkitTransform = 'translate3d (0, 0, 0)';\n  }\n\n  if (scroll.y) {\n    // maxHeight will make fixed-Table scrolling not working\n    // so we only set maxHeight to body-Table here\n    if (fixed) {\n      innerBodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;\n      innerBodyStyle.overflowY = bodyStyle.overflowY || 'scroll';\n    } else {\n      bodyStyle.maxHeight = bodyStyle.maxHeight || scroll.y;\n    }\n    bodyStyle.overflowY = bodyStyle.overflowY || 'scroll';\n    useFixedHeader = true;\n\n    // Add negative margin bottom for scroll bar overflow bug\n    var scrollbarWidth = measureScrollbar();\n    if (scrollbarWidth > 0 && fixed) {\n      bodyStyle.marginBottom = '-' + scrollbarWidth + 'px';\n      bodyStyle.paddingBottom = '0px';\n    }\n  }\n\n  var baseTable = React.createElement(BaseTable, {\n    tableClassName: tableClassName,\n    hasHead: !useFixedHeader,\n    hasBody: true,\n    fixed: fixed,\n    columns: columns,\n    expander: expander,\n    getRowKey: getRowKey,\n    isAnyColumnsFixed: isAnyColumnsFixed\n  });\n\n  if (fixed && columns.length) {\n    var refName = void 0;\n    if (columns[0].fixed === 'left' || columns[0].fixed === true) {\n      refName = 'fixedColumnsBodyLeft';\n    } else if (columns[0].fixed === 'right') {\n      refName = 'fixedColumnsBodyRight';\n    }\n    delete bodyStyle.overflowX;\n    delete bodyStyle.overflowY;\n    return React.createElement(\n      'div',\n      { key: 'bodyTable', className: prefixCls + '-body-outer', style: _extends({}, bodyStyle) },\n      React.createElement(\n        'div',\n        {\n          className: prefixCls + '-body-inner',\n          style: innerBodyStyle,\n          ref: saveRef(refName),\n          onWheel: handleWheel,\n          onScroll: handleBodyScroll\n        },\n        baseTable\n      )\n    );\n  }\n\n  return React.createElement(\n    'div',\n    {\n      key: 'bodyTable',\n      className: prefixCls + '-body',\n      style: bodyStyle,\n      ref: saveRef('bodyTable'),\n      onWheel: handleWheel,\n      onScroll: handleBodyScroll\n    },\n    baseTable\n  );\n}\n\nBodyTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  handleWheel: PropTypes.func.isRequired,\n  handleBodyScroll: PropTypes.func.isRequired,\n  getRowKey: PropTypes.func.isRequired,\n  expander: PropTypes.object.isRequired,\n  isAnyColumnsFixed: PropTypes.bool\n};\n\nBodyTable.contextTypes = {\n  table: PropTypes.any\n};"]},"metadata":{},"sourceType":"module"}