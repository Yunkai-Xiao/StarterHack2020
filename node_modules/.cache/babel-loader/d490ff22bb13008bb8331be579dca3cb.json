{"ast":null,"code":"var _svgBaseProps;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport warning from '../_util/warning'; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\nexport function alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n\n    default:\n  }\n\n  return type;\n}","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/antd/es/icon/utils.js"],"names":["_svgBaseProps","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","warning","svgBaseProps","width","height","fill","fillTester","outlineTester","twoToneTester","getThemeFromTypeName","type","result","test","removeTypeTheme","replace","withThemeSuffix","theme","concat","alias"],"mappings":"AAAA,IAAIA,aAAJ;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAOQ,OAAP,MAAoB,kBAApB,C,CAAwC;AACxC;;AAEA,OAAO,IAAIC,YAAY,IAAIX,aAAa,GAAG;AACzCY,EAAAA,KAAK,EAAE,KADkC;AAEzCC,EAAAA,MAAM,EAAE,KAFiC;AAGzCC,EAAAA,IAAI,EAAE;AAHmC,CAAhB,EAIxBb,eAAe,CAACD,aAAD,EAAgB,aAAhB,EAA+B,MAA/B,CAJS,EAI+BC,eAAe,CAACD,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,CAJ9C,EAIqFA,aAJzF,CAAhB;AAKP,IAAIe,UAAU,GAAG,QAAjB;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,IAAIC,aAAa,GAAG,WAApB;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAIL,UAAU,CAACM,IAAX,CAAgBF,IAAhB,CAAJ,EAA2B;AACzBC,IAAAA,MAAM,GAAG,QAAT;AACD,GAFD,MAEO,IAAIJ,aAAa,CAACK,IAAd,CAAmBF,IAAnB,CAAJ,EAA8B;AACnCC,IAAAA,MAAM,GAAG,UAAT;AACD,GAFM,MAEA,IAAIH,aAAa,CAACI,IAAd,CAAmBF,IAAnB,CAAJ,EAA8B;AACnCC,IAAAA,MAAM,GAAG,SAAT;AACD;;AAED,SAAOA,MAAP;AACD;AACD,OAAO,SAASE,eAAT,CAAyBH,IAAzB,EAA+B;AACpC,SAAOA,IAAI,CAACI,OAAL,CAAaR,UAAb,EAAyB,EAAzB,EAA6BQ,OAA7B,CAAqCP,aAArC,EAAoD,EAApD,EAAwDO,OAAxD,CAAgEN,aAAhE,EAA+E,EAA/E,CAAP;AACD;AACD,OAAO,SAASO,eAAT,CAAyBL,IAAzB,EAA+BM,KAA/B,EAAsC;AAC3C,MAAIL,MAAM,GAAGD,IAAb;;AAEA,MAAIM,KAAK,KAAK,QAAd,EAAwB;AACtBL,IAAAA,MAAM,IAAI,OAAV;AACD,GAFD,MAEO,IAAIK,KAAK,KAAK,UAAd,EAA0B;AAC/BL,IAAAA,MAAM,IAAI,IAAV;AACD,GAFM,MAEA,IAAIK,KAAK,KAAK,SAAd,EAAyB;AAC9BL,IAAAA,MAAM,IAAI,UAAV;AACD,GAFM,MAEA;AACLV,IAAAA,OAAO,CAAC,KAAD,EAAQ,MAAR,EAAgB,cAAcgB,MAAd,CAAqBP,IAArB,EAA2B,uBAA3B,EAAoDO,MAApD,CAA2DD,KAA3D,EAAkE,GAAlE,CAAhB,CAAP;AACD;;AAED,SAAOL,MAAP;AACD,C,CAAC;;AAEF,OAAO,SAASO,KAAT,CAAeR,IAAf,EAAqB;AAC1B,UAAQA,IAAR;AACE,SAAK,OAAL;AACE,aAAO,OAAP;;AAEF;AAJF;;AAOA,SAAOA,IAAP;AACD","sourcesContent":["var _svgBaseProps;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport warning from '../_util/warning'; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\nexport function alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n\n    default:\n  }\n\n  return type;\n}"]},"metadata":{},"sourceType":"module"}