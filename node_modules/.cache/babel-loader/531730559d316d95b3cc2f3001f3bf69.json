{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport classNames from 'classnames';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nvar BaseTable = function (_React$Component) {\n  _inherits(BaseTable, _React$Component);\n\n  function BaseTable() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BaseTable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BaseTable.__proto__ || Object.getPrototypeOf(BaseTable)).call.apply(_ref, [this].concat(args))), _this), _this.handleRowHover = function (isHover, key) {\n      _this.props.store.setState({\n        currentHoverKey: isHover ? key : null\n      });\n    }, _this.renderRows = function (renderData, indent) {\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var table = _this.context.table;\n      var columnManager = table.columnManager,\n          components = table.components;\n      var _table$props = table.props,\n          prefixCls = _table$props.prefixCls,\n          childrenColumnName = _table$props.childrenColumnName,\n          rowClassName = _table$props.rowClassName,\n          rowRef = _table$props.rowRef,\n          onRowClick = _table$props.onRowClick,\n          onRowDoubleClick = _table$props.onRowDoubleClick,\n          onRowContextMenu = _table$props.onRowContextMenu,\n          onRowMouseEnter = _table$props.onRowMouseEnter,\n          onRowMouseLeave = _table$props.onRowMouseLeave,\n          onRow = _table$props.onRow;\n      var _this$props = _this.props,\n          getRowKey = _this$props.getRowKey,\n          fixed = _this$props.fixed,\n          expander = _this$props.expander,\n          isAnyColumnsFixed = _this$props.isAnyColumnsFixed;\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n        var onHoverProps = {};\n\n        if (columnManager.isAnyColumnsFixed()) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns();\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns();\n        } else {\n          leafColumns = _this.getColumns(columnManager.leafColumns());\n        }\n\n        var rowPrefixCls = prefixCls + '-row';\n        var row = React.createElement(ExpandableRow, _extends({}, expander.props, {\n          fixed: fixed,\n          index: i,\n          prefixCls: rowPrefixCls,\n          record: record,\n          key: key,\n          rowKey: key,\n          onRowClick: onRowClick,\n          needIndentSpaced: expander.needIndentSpaced,\n          onExpandedChange: expander.handleExpandChange\n        }), function (expandableRow) {\n          return (// eslint-disable-line\n            React.createElement(TableRow, _extends({\n              fixed: fixed,\n              indent: indent,\n              className: className,\n              record: record,\n              index: i,\n              prefixCls: rowPrefixCls,\n              childrenColumnName: childrenColumnName,\n              columns: leafColumns,\n              onRow: onRow,\n              onRowDoubleClick: onRowDoubleClick,\n              onRowContextMenu: onRowContextMenu,\n              onRowMouseEnter: onRowMouseEnter,\n              onRowMouseLeave: onRowMouseLeave\n            }, onHoverProps, {\n              rowKey: key,\n              ancestorKeys: ancestorKeys,\n              ref: rowRef(record, i, indent),\n              components: components,\n              isAnyColumnsFixed: isAnyColumnsFixed\n            }, expandableRow))\n          );\n        });\n        rows.push(row);\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i++) {\n        _loop(i);\n      }\n\n      return rows;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(BaseTable, [{\n    key: 'getColumns',\n    value: function getColumns(cols) {\n      var _props = this.props,\n          _props$columns = _props.columns,\n          columns = _props$columns === undefined ? [] : _props$columns,\n          fixed = _props.fixed;\n      var table = this.context.table;\n      var prefixCls = table.props.prefixCls;\n      return (cols || columns).map(function (column) {\n        return _extends({}, column, {\n          className: !!column.fixed && !fixed ? classNames(prefixCls + '-fixed-columns-in-body', column.className) : column.className\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var table = this.context.table;\n      var components = table.components;\n      var _table$props2 = table.props,\n          prefixCls = _table$props2.prefixCls,\n          scroll = _table$props2.scroll,\n          data = _table$props2.data,\n          getBodyWrapper = _table$props2.getBodyWrapper;\n      var _props2 = this.props,\n          expander = _props2.expander,\n          tableClassName = _props2.tableClassName,\n          hasHead = _props2.hasHead,\n          hasBody = _props2.hasBody,\n          fixed = _props2.fixed;\n      var tableStyle = {};\n\n      if (!fixed && scroll.x) {\n        // not set width, then use content fixed width\n        if (scroll.x === true) {\n          tableStyle.tableLayout = 'fixed';\n        } else {\n          tableStyle.width = scroll.x;\n        }\n      }\n\n      var Table = hasBody ? components.table : 'table';\n      var BodyWrapper = components.body.wrapper;\n      var body = void 0;\n\n      if (hasBody) {\n        body = React.createElement(BodyWrapper, {\n          className: prefixCls + '-tbody'\n        }, this.renderRows(data, 0));\n\n        if (getBodyWrapper) {\n          body = getBodyWrapper(body);\n        }\n      }\n\n      var columns = this.getColumns();\n      return React.createElement(Table, {\n        className: tableClassName,\n        style: tableStyle,\n        key: 'table'\n      }, React.createElement(ColGroup, {\n        columns: columns,\n        fixed: fixed\n      }), hasHead && React.createElement(TableHeader, {\n        expander: expander,\n        columns: columns,\n        fixed: fixed\n      }), body);\n    }\n  }]);\n\n  return BaseTable;\n}(React.Component);\n\nBaseTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  hasHead: PropTypes.bool.isRequired,\n  hasBody: PropTypes.bool.isRequired,\n  store: PropTypes.object.isRequired,\n  expander: PropTypes.object.isRequired,\n  getRowKey: PropTypes.func,\n  isAnyColumnsFixed: PropTypes.bool\n};\nBaseTable.contextTypes = {\n  table: PropTypes.any\n};\nexport default connect()(BaseTable);","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-table/es/BaseTable.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","connect","classNames","ColGroup","TableHeader","TableRow","ExpandableRow","BaseTable","_React$Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","Object","getPrototypeOf","call","apply","concat","handleRowHover","isHover","key","props","store","setState","currentHoverKey","renderRows","renderData","indent","ancestorKeys","undefined","table","context","columnManager","components","_table$props","prefixCls","childrenColumnName","rowClassName","rowRef","onRowClick","onRowDoubleClick","onRowContextMenu","onRowMouseEnter","onRowMouseLeave","onRow","_this$props","getRowKey","fixed","expander","isAnyColumnsFixed","rows","_loop","i","record","className","onHoverProps","onHover","leafColumns","leftLeafColumns","rightLeafColumns","getColumns","rowPrefixCls","row","createElement","index","rowKey","needIndentSpaced","onExpandedChange","handleExpandChange","expandableRow","columns","ref","push","value","cols","_props","_props$columns","map","column","render","_table$props2","scroll","data","getBodyWrapper","_props2","tableClassName","hasHead","hasBody","tableStyle","x","tableLayout","width","Table","BodyWrapper","body","wrapper","style","Component","propTypes","oneOfType","string","bool","array","isRequired","object","func","contextTypes","any"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'mini-store';\nimport classNames from 'classnames';\nimport ColGroup from './ColGroup';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport ExpandableRow from './ExpandableRow';\n\nvar BaseTable = function (_React$Component) {\n  _inherits(BaseTable, _React$Component);\n\n  function BaseTable() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BaseTable);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BaseTable.__proto__ || Object.getPrototypeOf(BaseTable)).call.apply(_ref, [this].concat(args))), _this), _this.handleRowHover = function (isHover, key) {\n      _this.props.store.setState({\n        currentHoverKey: isHover ? key : null\n      });\n    }, _this.renderRows = function (renderData, indent) {\n      var ancestorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var table = _this.context.table;\n      var columnManager = table.columnManager,\n          components = table.components;\n      var _table$props = table.props,\n          prefixCls = _table$props.prefixCls,\n          childrenColumnName = _table$props.childrenColumnName,\n          rowClassName = _table$props.rowClassName,\n          rowRef = _table$props.rowRef,\n          onRowClick = _table$props.onRowClick,\n          onRowDoubleClick = _table$props.onRowDoubleClick,\n          onRowContextMenu = _table$props.onRowContextMenu,\n          onRowMouseEnter = _table$props.onRowMouseEnter,\n          onRowMouseLeave = _table$props.onRowMouseLeave,\n          onRow = _table$props.onRow;\n      var _this$props = _this.props,\n          getRowKey = _this$props.getRowKey,\n          fixed = _this$props.fixed,\n          expander = _this$props.expander,\n          isAnyColumnsFixed = _this$props.isAnyColumnsFixed;\n\n\n      var rows = [];\n\n      var _loop = function _loop(i) {\n        var record = renderData[i];\n        var key = getRowKey(record, i);\n        var className = typeof rowClassName === 'string' ? rowClassName : rowClassName(record, i, indent);\n\n        var onHoverProps = {};\n        if (columnManager.isAnyColumnsFixed()) {\n          onHoverProps.onHover = _this.handleRowHover;\n        }\n\n        var leafColumns = void 0;\n        if (fixed === 'left') {\n          leafColumns = columnManager.leftLeafColumns();\n        } else if (fixed === 'right') {\n          leafColumns = columnManager.rightLeafColumns();\n        } else {\n          leafColumns = _this.getColumns(columnManager.leafColumns());\n        }\n\n        var rowPrefixCls = prefixCls + '-row';\n\n        var row = React.createElement(\n          ExpandableRow,\n          _extends({}, expander.props, {\n            fixed: fixed,\n            index: i,\n            prefixCls: rowPrefixCls,\n            record: record,\n            key: key,\n            rowKey: key,\n            onRowClick: onRowClick,\n            needIndentSpaced: expander.needIndentSpaced,\n            onExpandedChange: expander.handleExpandChange\n          }),\n          function (expandableRow) {\n            return (// eslint-disable-line\n              React.createElement(TableRow, _extends({\n                fixed: fixed,\n                indent: indent,\n                className: className,\n                record: record,\n                index: i,\n                prefixCls: rowPrefixCls,\n                childrenColumnName: childrenColumnName,\n                columns: leafColumns,\n                onRow: onRow,\n                onRowDoubleClick: onRowDoubleClick,\n                onRowContextMenu: onRowContextMenu,\n                onRowMouseEnter: onRowMouseEnter,\n                onRowMouseLeave: onRowMouseLeave\n              }, onHoverProps, {\n                rowKey: key,\n                ancestorKeys: ancestorKeys,\n                ref: rowRef(record, i, indent),\n                components: components,\n                isAnyColumnsFixed: isAnyColumnsFixed\n              }, expandableRow))\n            );\n          }\n        );\n\n        rows.push(row);\n\n        expander.renderRows(_this.renderRows, rows, record, i, indent, fixed, key, ancestorKeys);\n      };\n\n      for (var i = 0; i < renderData.length; i++) {\n        _loop(i);\n      }\n      return rows;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(BaseTable, [{\n    key: 'getColumns',\n    value: function getColumns(cols) {\n      var _props = this.props,\n          _props$columns = _props.columns,\n          columns = _props$columns === undefined ? [] : _props$columns,\n          fixed = _props.fixed;\n      var table = this.context.table;\n      var prefixCls = table.props.prefixCls;\n\n      return (cols || columns).map(function (column) {\n        return _extends({}, column, {\n          className: !!column.fixed && !fixed ? classNames(prefixCls + '-fixed-columns-in-body', column.className) : column.className\n        });\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var table = this.context.table;\n      var components = table.components;\n      var _table$props2 = table.props,\n          prefixCls = _table$props2.prefixCls,\n          scroll = _table$props2.scroll,\n          data = _table$props2.data,\n          getBodyWrapper = _table$props2.getBodyWrapper;\n      var _props2 = this.props,\n          expander = _props2.expander,\n          tableClassName = _props2.tableClassName,\n          hasHead = _props2.hasHead,\n          hasBody = _props2.hasBody,\n          fixed = _props2.fixed;\n\n      var tableStyle = {};\n\n      if (!fixed && scroll.x) {\n        // not set width, then use content fixed width\n        if (scroll.x === true) {\n          tableStyle.tableLayout = 'fixed';\n        } else {\n          tableStyle.width = scroll.x;\n        }\n      }\n\n      var Table = hasBody ? components.table : 'table';\n      var BodyWrapper = components.body.wrapper;\n\n      var body = void 0;\n      if (hasBody) {\n        body = React.createElement(\n          BodyWrapper,\n          { className: prefixCls + '-tbody' },\n          this.renderRows(data, 0)\n        );\n        if (getBodyWrapper) {\n          body = getBodyWrapper(body);\n        }\n      }\n\n      var columns = this.getColumns();\n\n      return React.createElement(\n        Table,\n        { className: tableClassName, style: tableStyle, key: 'table' },\n        React.createElement(ColGroup, { columns: columns, fixed: fixed }),\n        hasHead && React.createElement(TableHeader, { expander: expander, columns: columns, fixed: fixed }),\n        body\n      );\n    }\n  }]);\n\n  return BaseTable;\n}(React.Component);\n\nBaseTable.propTypes = {\n  fixed: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  columns: PropTypes.array.isRequired,\n  tableClassName: PropTypes.string.isRequired,\n  hasHead: PropTypes.bool.isRequired,\n  hasBody: PropTypes.bool.isRequired,\n  store: PropTypes.object.isRequired,\n  expander: PropTypes.object.isRequired,\n  getRowKey: PropTypes.func,\n  isAnyColumnsFixed: PropTypes.bool\n};\nBaseTable.contextTypes = {\n  table: PropTypes.any\n};\n\n\nexport default connect()(BaseTable);"]},"metadata":{},"sourceType":"module"}