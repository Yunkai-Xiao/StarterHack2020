{"ast":null,"code":"var _jsxFileName = \"/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, Circle } from \"react-google-maps\";\n\nvar Map = function Map(props) {\n  console.log(props.markerLoc['0']);\n  props.markerLoc.map(function (coordPair) {\n    console.log(1);\n  });\n  console.log(props.markerLoc);\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: {\n      lat: 1,\n      lng: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    position: {\n      lat: parseFloat(1),\n      lng: parseFloat(1)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), props.markerLoc.map(function (coordPair) {\n    console.log(1);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: parseFloat(1),\n        lng: parseFloat(1)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(1),\n        lng: parseFloat(1)\n      },\n      radius: 3000,\n      options: {\n        strokeColor: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Marker","Circle","Map","props","console","log","markerLoc","map","coordPair","zoom","lat","lng","parseFloat","strokeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgB,GAAhB,CAAZ;AACAH,EAAAA,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,SAAS,EAAI;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AAAgB,GADlB;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEH,KAAK,CAACM,IADrB;AAEE,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAC,CAAL;AAAQC,MAAAA,GAAG,EAAC;AAAZ,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA,oBAAC,MAAD;AACU,IAAA,QAAQ,EAAE;AACRD,MAAAA,GAAG,EAAEE,UAAU,CAAC,CAAD,CADP;AAERD,MAAAA,GAAG,EAAEC,UAAU,CAAC,CAAD;AAFP,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAUGT,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,SAAS,EAAI;AAChCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AACRK,QAAAA,GAAG,EAAEE,UAAU,CAAC,CAAD,CADP;AAERD,QAAAA,GAAG,EAAEC,UAAU,CAAC,CAAD;AAFP,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE;AACbF,QAAAA,GAAG,EAAEE,UAAU,CAAC,CAAD,CADF;AAEbD,QAAAA,GAAG,EAAEC,UAAU,CAAC,CAAD;AAFF,OADjB;AAKE,MAAA,MAAM,EAAE,IALV;AAME,MAAA,OAAO,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAkBD,GApBA,CAVH,CADF;AAkCD,CAvCD;;AAyCA,eAAed,YAAY,CAACF,aAAa,CAACK,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n  console.log(props.markerLoc['0']);\n  props.markerLoc.map(coordPair => {\n    console.log(1);});\n  console.log(props.markerLoc);\n  return (\n    <GoogleMap\n      defaultZoom={props.zoom}\n      defaultCenter={{lat:1, lng:1}}\n    >\n    <Marker\n              position={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n            />\n      {props.markerLoc.map(coordPair => {\n        console.log(1);\n        return (\n          <Fragment>\n            <Marker\n              position={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n            />\n            <Circle\n              defaultCenter={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n              radius={3000}\n              options={{strokeColor: \"#ff0000\"}}\n            />\n          </Fragment>\n        );\n      })}\n    </GoogleMap>\n  );\n}\n\nexport default withScriptjs(withGoogleMap(Map));"]},"metadata":{},"sourceType":"module"}