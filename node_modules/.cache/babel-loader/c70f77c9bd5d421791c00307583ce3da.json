{"ast":null,"code":"import addEventListener from \"rc-util/es/Dom/addEventListener\"; // ======================== Observer ========================\n\nvar TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nvar observerEntities = [];\nexport function addObserveTarget(target, affix) {\n  if (!target) return;\n  var entity = observerEntities.find(function (item) {\n    return item.target === target;\n  });\n\n  if (entity) {\n    entity.affixList.push(affix);\n  } else {\n    entity = {\n      target: target,\n      affixList: [affix],\n      eventHandlers: {}\n    };\n    observerEntities.push(entity); // Add listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      entity.eventHandlers[eventName] = addEventListener(target, eventName, function (event) {\n        entity.affixList.forEach(function (affix) {\n          affix.updatePosition(event);\n        });\n      });\n    });\n  }\n}\nexport function removeObserveTarget(affix) {\n  var observerEntity = observerEntities.find(function (oriObserverEntity) {\n    var hasAffix = oriObserverEntity.affixList.some(function (item) {\n      return item === affix;\n    });\n\n    if (hasAffix) {\n      oriObserverEntity.affixList = oriObserverEntity.affixList.filter(function (item) {\n        return item !== affix;\n      });\n    }\n\n    return hasAffix;\n  });\n\n  if (observerEntity && observerEntity.affixList.length === 0) {\n    observerEntities = observerEntities.filter(function (item) {\n      return item !== observerEntity;\n    }); // Remove listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      var handler = observerEntity.eventHandlers[eventName];\n\n      if (handler && handler.remove) {\n        handler.remove();\n      }\n    });\n  }\n}\nexport function getTargetRect(target) {\n  return target !== window ? target.getBoundingClientRect() : {\n    top: 0,\n    bottom: window.innerHeight\n  };\n}","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/antd/es/affix/utils.js"],"names":["addEventListener","TRIGGER_EVENTS","observerEntities","addObserveTarget","target","affix","entity","find","item","affixList","push","eventHandlers","forEach","eventName","event","updatePosition","removeObserveTarget","observerEntity","oriObserverEntity","hasAffix","some","filter","length","handler","remove","getTargetRect","window","getBoundingClientRect","top","bottom","innerHeight"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,iCAA7B,C,CAAgE;;AAEhE,IAAIC,cAAc,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,EAAmC,WAAnC,EAAgD,UAAhD,EAA4D,UAA5D,EAAwE,MAAxE,CAArB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAC9C,MAAI,CAACD,MAAL,EAAa;AACb,MAAIE,MAAM,GAAGJ,gBAAgB,CAACK,IAAjB,CAAsB,UAAUC,IAAV,EAAgB;AACjD,WAAOA,IAAI,CAACJ,MAAL,KAAgBA,MAAvB;AACD,GAFY,CAAb;;AAIA,MAAIE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACG,SAAP,CAAiBC,IAAjB,CAAsBL,KAAtB;AACD,GAFD,MAEO;AACLC,IAAAA,MAAM,GAAG;AACPF,MAAAA,MAAM,EAAEA,MADD;AAEPK,MAAAA,SAAS,EAAE,CAACJ,KAAD,CAFJ;AAGPM,MAAAA,aAAa,EAAE;AAHR,KAAT;AAKAT,IAAAA,gBAAgB,CAACQ,IAAjB,CAAsBJ,MAAtB,EANK,CAM0B;;AAE/BL,IAAAA,cAAc,CAACW,OAAf,CAAuB,UAAUC,SAAV,EAAqB;AAC1CP,MAAAA,MAAM,CAACK,aAAP,CAAqBE,SAArB,IAAkCb,gBAAgB,CAACI,MAAD,EAASS,SAAT,EAAoB,UAAUC,KAAV,EAAiB;AACrFR,QAAAA,MAAM,CAACG,SAAP,CAAiBG,OAAjB,CAAyB,UAAUP,KAAV,EAAiB;AACxCA,UAAAA,KAAK,CAACU,cAAN,CAAqBD,KAArB;AACD,SAFD;AAGD,OAJiD,CAAlD;AAKD,KAND;AAOD;AACF;AACD,OAAO,SAASE,mBAAT,CAA6BX,KAA7B,EAAoC;AACzC,MAAIY,cAAc,GAAGf,gBAAgB,CAACK,IAAjB,CAAsB,UAAUW,iBAAV,EAA6B;AACtE,QAAIC,QAAQ,GAAGD,iBAAiB,CAACT,SAAlB,CAA4BW,IAA5B,CAAiC,UAAUZ,IAAV,EAAgB;AAC9D,aAAOA,IAAI,KAAKH,KAAhB;AACD,KAFc,CAAf;;AAIA,QAAIc,QAAJ,EAAc;AACZD,MAAAA,iBAAiB,CAACT,SAAlB,GAA8BS,iBAAiB,CAACT,SAAlB,CAA4BY,MAA5B,CAAmC,UAAUb,IAAV,EAAgB;AAC/E,eAAOA,IAAI,KAAKH,KAAhB;AACD,OAF6B,CAA9B;AAGD;;AAED,WAAOc,QAAP;AACD,GAZoB,CAArB;;AAcA,MAAIF,cAAc,IAAIA,cAAc,CAACR,SAAf,CAAyBa,MAAzB,KAAoC,CAA1D,EAA6D;AAC3DpB,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACmB,MAAjB,CAAwB,UAAUb,IAAV,EAAgB;AACzD,aAAOA,IAAI,KAAKS,cAAhB;AACD,KAFkB,CAAnB,CAD2D,CAGvD;;AAEJhB,IAAAA,cAAc,CAACW,OAAf,CAAuB,UAAUC,SAAV,EAAqB;AAC1C,UAAIU,OAAO,GAAGN,cAAc,CAACN,aAAf,CAA6BE,SAA7B,CAAd;;AAEA,UAAIU,OAAO,IAAIA,OAAO,CAACC,MAAvB,EAA+B;AAC7BD,QAAAA,OAAO,CAACC,MAAR;AACD;AACF,KAND;AAOD;AACF;AACD,OAAO,SAASC,aAAT,CAAuBrB,MAAvB,EAA+B;AACpC,SAAOA,MAAM,KAAKsB,MAAX,GAAoBtB,MAAM,CAACuB,qBAAP,EAApB,GAAqD;AAC1DC,IAAAA,GAAG,EAAE,CADqD;AAE1DC,IAAAA,MAAM,EAAEH,MAAM,CAACI;AAF2C,GAA5D;AAID","sourcesContent":["import addEventListener from \"rc-util/es/Dom/addEventListener\"; // ======================== Observer ========================\n\nvar TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nvar observerEntities = [];\nexport function addObserveTarget(target, affix) {\n  if (!target) return;\n  var entity = observerEntities.find(function (item) {\n    return item.target === target;\n  });\n\n  if (entity) {\n    entity.affixList.push(affix);\n  } else {\n    entity = {\n      target: target,\n      affixList: [affix],\n      eventHandlers: {}\n    };\n    observerEntities.push(entity); // Add listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      entity.eventHandlers[eventName] = addEventListener(target, eventName, function (event) {\n        entity.affixList.forEach(function (affix) {\n          affix.updatePosition(event);\n        });\n      });\n    });\n  }\n}\nexport function removeObserveTarget(affix) {\n  var observerEntity = observerEntities.find(function (oriObserverEntity) {\n    var hasAffix = oriObserverEntity.affixList.some(function (item) {\n      return item === affix;\n    });\n\n    if (hasAffix) {\n      oriObserverEntity.affixList = oriObserverEntity.affixList.filter(function (item) {\n        return item !== affix;\n      });\n    }\n\n    return hasAffix;\n  });\n\n  if (observerEntity && observerEntity.affixList.length === 0) {\n    observerEntities = observerEntities.filter(function (item) {\n      return item !== observerEntity;\n    }); // Remove listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      var handler = observerEntity.eventHandlers[eventName];\n\n      if (handler && handler.remove) {\n        handler.remove();\n      }\n    });\n  }\n}\nexport function getTargetRect(target) {\n  return target !== window ? target.getBoundingClientRect() : {\n    top: 0,\n    bottom: window.innerHeight\n  };\n}"]},"metadata":{},"sourceType":"module"}