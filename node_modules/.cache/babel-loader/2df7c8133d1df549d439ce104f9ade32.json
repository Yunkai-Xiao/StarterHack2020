{"ast":null,"code":"var _jsxFileName = \"/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, Circle } from \"react-google-maps\";\n\nvar Map = function Map(props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.places.map(function (place) {\n    return React.createElement(Fragment, {\n      key: place.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: parseFloat(place.latitude),\n        lng: parseFloat(place.longitude)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), place.circle && React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(place.latitude),\n        lng: parseFloat(place.longitude)\n      },\n      radius: place.circle.radius,\n      options: place.circle.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Marker","Circle","Map","props","zoom","center","places","map","place","id","lat","parseFloat","latitude","lng","longitude","circle","radius","options"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACnB,SACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEA,KAAK,CAACC,IADrB;AAEE,IAAA,aAAa,EAAED,KAAK,CAACE,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK,EAAI;AACzB,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAEC,UAAU,CAACH,KAAK,CAACI,QAAP,CADP;AAERC,QAAAA,GAAG,EAAEF,UAAU,CAACH,KAAK,CAACM,SAAP;AAFP,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGN,KAAK,CAACO,MAAN,IAAgB,oBAAC,MAAD;AACf,MAAA,aAAa,EAAE;AACbL,QAAAA,GAAG,EAAEC,UAAU,CAACH,KAAK,CAACI,QAAP,CADF;AAEbC,QAAAA,GAAG,EAAEF,UAAU,CAACH,KAAK,CAACM,SAAP;AAFF,OADA;AAKf,MAAA,MAAM,EAAEN,KAAK,CAACO,MAAN,CAAaC,MALN;AAMf,MAAA,OAAO,EAAER,KAAK,CAACO,MAAN,CAAaE,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPnB,CADF;AAkBD,GAnBA,CAJH,CADF;AA2BD,CA5BD;;AA8BA,eAAelB,YAAY,CAACF,aAAa,CAACK,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n  return (\n    <GoogleMap\n      defaultZoom={props.zoom}\n      defaultCenter={props.center}\n    >\n      {props.places.map(place => {\n        return (\n          <Fragment key={place.id}>\n            <Marker\n              position={{\n                lat: parseFloat(place.latitude),\n                lng: parseFloat(place.longitude)\n              }}\n            />\n            {place.circle && <Circle\n              defaultCenter={{\n                lat: parseFloat(place.latitude),\n                lng: parseFloat(place.longitude)\n              }}\n              radius={place.circle.radius}\n              options={place.circle.options}\n            />}\n          </Fragment>\n        );\n      })}\n    </GoogleMap>\n  );\n}\n\nexport default withScriptjs(withGoogleMap(Map));"]},"metadata":{},"sourceType":"module"}