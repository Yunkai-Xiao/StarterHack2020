{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nfunction isInvalidRenderCellText(text) {\n  return text && !React.isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';\n}\n\nvar TableCell = function (_React$Component) {\n  _inherits(TableCell, _React$Component);\n\n  function TableCell() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableCell);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableCell.__proto__ || Object.getPrototypeOf(TableCell)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          onCellClick = _this$props.column.onCellClick;\n\n      if (onCellClick) {\n        onCellClick(record, e);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableCell, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          record = _props.record,\n          indentSize = _props.indentSize,\n          prefixCls = _props.prefixCls,\n          indent = _props.indent,\n          index = _props.index,\n          expandIcon = _props.expandIcon,\n          column = _props.column,\n          BodyCell = _props.component;\n      var dataIndex = column.dataIndex,\n          render = column.render,\n          _column$className = column.className,\n          className = _column$className === undefined ? '' : _column$className; // We should return undefined if no dataIndex is specified, but in order to\n      // be compatible with object-path's behavior, we return the record object instead.\n\n      var text = void 0;\n\n      if (typeof dataIndex === 'number') {\n        text = get(record, dataIndex);\n      } else if (!dataIndex || dataIndex.length === 0) {\n        text = record;\n      } else {\n        text = get(record, dataIndex);\n      }\n\n      var tdProps = {};\n      var colSpan = void 0;\n      var rowSpan = void 0;\n\n      if (render) {\n        text = render(text, record, index);\n\n        if (isInvalidRenderCellText(text)) {\n          tdProps = text.props || tdProps;\n          colSpan = tdProps.colSpan;\n          rowSpan = tdProps.rowSpan;\n          text = text.children;\n        }\n      }\n\n      if (column.onCell) {\n        tdProps = _extends({}, tdProps, column.onCell(record, index));\n      } // Fix https://github.com/ant-design/ant-design/issues/1202\n\n\n      if (isInvalidRenderCellText(text)) {\n        text = null;\n      }\n\n      var indentText = expandIcon ? React.createElement('span', {\n        style: {\n          paddingLeft: indentSize * indent + 'px'\n        },\n        className: prefixCls + '-indent indent-level-' + indent\n      }) : null;\n\n      if (rowSpan === 0 || colSpan === 0) {\n        return null;\n      }\n\n      if (column.align) {\n        tdProps.style = _extends({}, tdProps.style, {\n          textAlign: column.align\n        });\n      }\n\n      return React.createElement(BodyCell, _extends({\n        className: className,\n        onClick: this.handleClick\n      }, tdProps), indentText, expandIcon, text);\n    }\n  }]);\n\n  return TableCell;\n}(React.Component);\n\nTableCell.propTypes = {\n  record: PropTypes.object,\n  prefixCls: PropTypes.string,\n  index: PropTypes.number,\n  indent: PropTypes.number,\n  indentSize: PropTypes.number,\n  column: PropTypes.object,\n  expandIcon: PropTypes.node,\n  component: PropTypes.any\n};\nexport default TableCell;","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/rc-table/es/TableCell.js"],"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","get","isInvalidRenderCellText","text","isValidElement","Object","prototype","toString","call","TableCell","_React$Component","_ref","_temp","_this","_ret","_len","arguments","length","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClick","e","_this$props","props","record","onCellClick","column","key","value","render","_props","indentSize","prefixCls","indent","index","expandIcon","BodyCell","component","dataIndex","_column$className","className","undefined","tdProps","colSpan","rowSpan","children","onCell","indentText","createElement","style","paddingLeft","align","textAlign","onClick","Component","propTypes","object","string","number","node","any"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AACrC,SAAOA,IAAI,IAAI,CAACJ,KAAK,CAACK,cAAN,CAAqBD,IAArB,CAAT,IAAuCE,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,IAA/B,MAAyC,iBAAvF;AACD;;AAED,IAAIM,SAAS,GAAG,UAAUC,gBAAV,EAA4B;AAC1CZ,EAAAA,SAAS,CAACW,SAAD,EAAYC,gBAAZ,CAAT;;AAEA,WAASD,SAAT,GAAqB;AACnB,QAAIE,IAAJ;;AAEA,QAAIC,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEAnB,IAAAA,eAAe,CAAC,IAAD,EAAOc,SAAP,CAAf;;AAEA,SAAK,IAAIM,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAON,IAAI,IAAIF,KAAK,IAAIC,KAAK,GAAGhB,0BAA0B,CAAC,IAAD,EAAO,CAACc,IAAI,GAAGF,SAAS,CAACY,SAAV,IAAuBhB,MAAM,CAACiB,cAAP,CAAsBb,SAAtB,CAA/B,EAAiED,IAAjE,CAAsEe,KAAtE,CAA4EZ,IAA5E,EAAkF,CAAC,IAAD,EAAOa,MAAP,CAAcN,IAAd,CAAlF,CAAP,CAAlC,EAAkJL,KAAtJ,CAAL,EAAmKA,KAAK,CAACY,WAAN,GAAoB,UAAUC,CAAV,EAAa;AACjN,UAAIC,WAAW,GAAGd,KAAK,CAACe,KAAxB;AAAA,UACIC,MAAM,GAAGF,WAAW,CAACE,MADzB;AAAA,UAEIC,WAAW,GAAGH,WAAW,CAACI,MAAZ,CAAmBD,WAFrC;;AAIA,UAAIA,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAACD,MAAD,EAASH,CAAT,CAAX;AACD;AACF,KARc,EAQZd,KARQ,CAAJ,EAQIf,0BAA0B,CAACgB,KAAD,EAAQC,IAAR,CARrC;AASD;;AAEDlB,EAAAA,YAAY,CAACa,SAAD,EAAY,CAAC;AACvBuB,IAAAA,GAAG,EAAE,QADkB;AAEvBC,IAAAA,KAAK,EAAE,SAASC,MAAT,GAAkB;AACvB,UAAIC,MAAM,GAAG,KAAKP,KAAlB;AAAA,UACIC,MAAM,GAAGM,MAAM,CAACN,MADpB;AAAA,UAEIO,UAAU,GAAGD,MAAM,CAACC,UAFxB;AAAA,UAGIC,SAAS,GAAGF,MAAM,CAACE,SAHvB;AAAA,UAIIC,MAAM,GAAGH,MAAM,CAACG,MAJpB;AAAA,UAKIC,KAAK,GAAGJ,MAAM,CAACI,KALnB;AAAA,UAMIC,UAAU,GAAGL,MAAM,CAACK,UANxB;AAAA,UAOIT,MAAM,GAAGI,MAAM,CAACJ,MAPpB;AAAA,UAQIU,QAAQ,GAAGN,MAAM,CAACO,SARtB;AASA,UAAIC,SAAS,GAAGZ,MAAM,CAACY,SAAvB;AAAA,UACIT,MAAM,GAAGH,MAAM,CAACG,MADpB;AAAA,UAEIU,iBAAiB,GAAGb,MAAM,CAACc,SAF/B;AAAA,UAGIA,SAAS,GAAGD,iBAAiB,KAAKE,SAAtB,GAAkC,EAAlC,GAAuCF,iBAHvD,CAVuB,CAevB;AACA;;AAEA,UAAIzC,IAAI,GAAG,KAAK,CAAhB;;AACA,UAAI,OAAOwC,SAAP,KAAqB,QAAzB,EAAmC;AACjCxC,QAAAA,IAAI,GAAGF,GAAG,CAAC4B,MAAD,EAASc,SAAT,CAAV;AACD,OAFD,MAEO,IAAI,CAACA,SAAD,IAAcA,SAAS,CAAC1B,MAAV,KAAqB,CAAvC,EAA0C;AAC/Cd,QAAAA,IAAI,GAAG0B,MAAP;AACD,OAFM,MAEA;AACL1B,QAAAA,IAAI,GAAGF,GAAG,CAAC4B,MAAD,EAASc,SAAT,CAAV;AACD;;AACD,UAAII,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,KAAK,CAAnB;AACA,UAAIC,OAAO,GAAG,KAAK,CAAnB;;AAEA,UAAIf,MAAJ,EAAY;AACV/B,QAAAA,IAAI,GAAG+B,MAAM,CAAC/B,IAAD,EAAO0B,MAAP,EAAeU,KAAf,CAAb;;AACA,YAAIrC,uBAAuB,CAACC,IAAD,CAA3B,EAAmC;AACjC4C,UAAAA,OAAO,GAAG5C,IAAI,CAACyB,KAAL,IAAcmB,OAAxB;AACAC,UAAAA,OAAO,GAAGD,OAAO,CAACC,OAAlB;AACAC,UAAAA,OAAO,GAAGF,OAAO,CAACE,OAAlB;AACA9C,UAAAA,IAAI,GAAGA,IAAI,CAAC+C,QAAZ;AACD;AACF;;AAED,UAAInB,MAAM,CAACoB,MAAX,EAAmB;AACjBJ,QAAAA,OAAO,GAAGrD,QAAQ,CAAC,EAAD,EAAKqD,OAAL,EAAchB,MAAM,CAACoB,MAAP,CAActB,MAAd,EAAsBU,KAAtB,CAAd,CAAlB;AACD,OA1CsB,CA4CvB;;;AACA,UAAIrC,uBAAuB,CAACC,IAAD,CAA3B,EAAmC;AACjCA,QAAAA,IAAI,GAAG,IAAP;AACD;;AAED,UAAIiD,UAAU,GAAGZ,UAAU,GAAGzC,KAAK,CAACsD,aAAN,CAAoB,MAApB,EAA4B;AACxDC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAEnB,UAAU,GAAGE,MAAb,GAAsB;AAArC,SADiD;AAExDO,QAAAA,SAAS,EAAER,SAAS,GAAG,uBAAZ,GAAsCC;AAFO,OAA5B,CAAH,GAGtB,IAHL;;AAKA,UAAIW,OAAO,KAAK,CAAZ,IAAiBD,OAAO,KAAK,CAAjC,EAAoC;AAClC,eAAO,IAAP;AACD;;AAED,UAAIjB,MAAM,CAACyB,KAAX,EAAkB;AAChBT,QAAAA,OAAO,CAACO,KAAR,GAAgB5D,QAAQ,CAAC,EAAD,EAAKqD,OAAO,CAACO,KAAb,EAAoB;AAAEG,UAAAA,SAAS,EAAE1B,MAAM,CAACyB;AAApB,SAApB,CAAxB;AACD;;AAED,aAAOzD,KAAK,CAACsD,aAAN,CACLZ,QADK,EAEL/C,QAAQ,CAAC;AAAEmD,QAAAA,SAAS,EAAEA,SAAb;AAAwBa,QAAAA,OAAO,EAAE,KAAKjC;AAAtC,OAAD,EAAsDsB,OAAtD,CAFH,EAGLK,UAHK,EAILZ,UAJK,EAKLrC,IALK,CAAP;AAOD;AAvEsB,GAAD,CAAZ,CAAZ;;AA0EA,SAAOM,SAAP;AACD,CApGe,CAoGdV,KAAK,CAAC4D,SApGQ,CAAhB;;AAsGAlD,SAAS,CAACmD,SAAV,GAAsB;AACpB/B,EAAAA,MAAM,EAAE7B,SAAS,CAAC6D,MADE;AAEpBxB,EAAAA,SAAS,EAAErC,SAAS,CAAC8D,MAFD;AAGpBvB,EAAAA,KAAK,EAAEvC,SAAS,CAAC+D,MAHG;AAIpBzB,EAAAA,MAAM,EAAEtC,SAAS,CAAC+D,MAJE;AAKpB3B,EAAAA,UAAU,EAAEpC,SAAS,CAAC+D,MALF;AAMpBhC,EAAAA,MAAM,EAAE/B,SAAS,CAAC6D,MANE;AAOpBrB,EAAAA,UAAU,EAAExC,SAAS,CAACgE,IAPF;AAQpBtB,EAAAA,SAAS,EAAE1C,SAAS,CAACiE;AARD,CAAtB;AAUA,eAAexD,SAAf","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nfunction isInvalidRenderCellText(text) {\n  return text && !React.isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';\n}\n\nvar TableCell = function (_React$Component) {\n  _inherits(TableCell, _React$Component);\n\n  function TableCell() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableCell);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableCell.__proto__ || Object.getPrototypeOf(TableCell)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          onCellClick = _this$props.column.onCellClick;\n\n      if (onCellClick) {\n        onCellClick(record, e);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableCell, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          record = _props.record,\n          indentSize = _props.indentSize,\n          prefixCls = _props.prefixCls,\n          indent = _props.indent,\n          index = _props.index,\n          expandIcon = _props.expandIcon,\n          column = _props.column,\n          BodyCell = _props.component;\n      var dataIndex = column.dataIndex,\n          render = column.render,\n          _column$className = column.className,\n          className = _column$className === undefined ? '' : _column$className;\n\n      // We should return undefined if no dataIndex is specified, but in order to\n      // be compatible with object-path's behavior, we return the record object instead.\n\n      var text = void 0;\n      if (typeof dataIndex === 'number') {\n        text = get(record, dataIndex);\n      } else if (!dataIndex || dataIndex.length === 0) {\n        text = record;\n      } else {\n        text = get(record, dataIndex);\n      }\n      var tdProps = {};\n      var colSpan = void 0;\n      var rowSpan = void 0;\n\n      if (render) {\n        text = render(text, record, index);\n        if (isInvalidRenderCellText(text)) {\n          tdProps = text.props || tdProps;\n          colSpan = tdProps.colSpan;\n          rowSpan = tdProps.rowSpan;\n          text = text.children;\n        }\n      }\n\n      if (column.onCell) {\n        tdProps = _extends({}, tdProps, column.onCell(record, index));\n      }\n\n      // Fix https://github.com/ant-design/ant-design/issues/1202\n      if (isInvalidRenderCellText(text)) {\n        text = null;\n      }\n\n      var indentText = expandIcon ? React.createElement('span', {\n        style: { paddingLeft: indentSize * indent + 'px' },\n        className: prefixCls + '-indent indent-level-' + indent\n      }) : null;\n\n      if (rowSpan === 0 || colSpan === 0) {\n        return null;\n      }\n\n      if (column.align) {\n        tdProps.style = _extends({}, tdProps.style, { textAlign: column.align });\n      }\n\n      return React.createElement(\n        BodyCell,\n        _extends({ className: className, onClick: this.handleClick }, tdProps),\n        indentText,\n        expandIcon,\n        text\n      );\n    }\n  }]);\n\n  return TableCell;\n}(React.Component);\n\nTableCell.propTypes = {\n  record: PropTypes.object,\n  prefixCls: PropTypes.string,\n  index: PropTypes.number,\n  indent: PropTypes.number,\n  indentSize: PropTypes.number,\n  column: PropTypes.object,\n  expandIcon: PropTypes.node,\n  component: PropTypes.any\n};\nexport default TableCell;"]},"metadata":{},"sourceType":"module"}