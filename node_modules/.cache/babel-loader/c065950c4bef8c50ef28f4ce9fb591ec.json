{"ast":null,"code":"/* global Promise */\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : iconType ? iconNode : '', React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/node_modules/antd/es/message/index.js"],"names":["React","Notification","Icon","defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","newInstance","style","top","instance","notice","args","duration","undefined","iconType","info","success","error","warning","loading","type","target","closePromise","Promise","resolve","onClose","iconNode","createElement","theme","content","className","concat","icon","result","removeNotice","then","filled","rejected","promise","api","open","config","options","destroy","forEach","warn"],"mappings":"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","sourcesContent":["/* global Promise */\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : iconType ? iconNode : '', React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;"]},"metadata":{},"sourceType":"module"}