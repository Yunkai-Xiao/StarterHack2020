{"ast":null,"code":"var _jsxFileName = \"/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js\";\nimport React, { Fragment } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, Circle } from \"react-google-maps\";\n\nvar Map = function Map(props) {\n  console.log(props.markerLoc);\n  return React.createElement(GoogleMap, {\n    defaultZoom: props.zoom,\n    defaultCenter: {\n      lat: 1,\n      lng: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.markerLoc.map(function (coordPair) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: parseFloat(1),\n        lng: parseFloat(1)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), true && React.createElement(Circle, {\n      defaultCenter: {\n        lat: parseFloat(1),\n        lng: parseFloat(1)\n      },\n      radius: 3000,\n      options: {\n        strokeColor: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default withScriptjs(withGoogleMap(Map));","map":{"version":3,"sources":["/Users/SHAWN/Downloads/StudyMate2/src/containers/MapContainer.js"],"names":["React","Fragment","withGoogleMap","GoogleMap","withScriptjs","Marker","Circle","Map","props","console","log","markerLoc","zoom","lat","lng","map","coordPair","parseFloat","strokeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,MALF,QAMO,mBANP;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,SAEE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEH,KAAK,CAACI,IADrB;AAEE,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAC,CAAL;AAAQC,MAAAA,GAAG,EAAC;AAAZ,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGN,KAAK,CAACG,SAAN,CAAgBI,GAAhB,CAAoB,UAAAC,SAAS,EAAI;AAEhC,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AACRH,QAAAA,GAAG,EAAEI,UAAU,CAAC,CAAD,CADP;AAERH,QAAAA,GAAG,EAAEG,UAAU,CAAC,CAAD;AAFP,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,QAAQ,oBAAC,MAAD;AACP,MAAA,aAAa,EAAE;AACbJ,QAAAA,GAAG,EAAEI,UAAU,CAAC,CAAD,CADF;AAEbH,QAAAA,GAAG,EAAEG,UAAU,CAAC,CAAD;AAFF,OADR;AAKP,MAAA,MAAM,EAAE,IALD;AAMP,MAAA,OAAO,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPX,CADF;AAkBD,GApBA,CAVH,CAFF;AAmCD,CArCD;;AAuCA,eAAed,YAAY,CAACF,aAAa,CAACK,GAAD,CAAd,CAA3B","sourcesContent":["import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\nconst Map = props => {\n  console.log(props.markerLoc);\n  return (\n    \n    <GoogleMap\n      defaultZoom={props.zoom}\n      defaultCenter={{lat:1, lng:1}}\n    >\n    {/* <Marker\n              position={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n            /> */}\n      {props.markerLoc.map(coordPair => {\n        \n        return (\n          <Fragment>\n            <Marker\n              position={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n            />\n            {true && <Circle\n              defaultCenter={{\n                lat: parseFloat(1),\n                lng: parseFloat(1)\n              }}\n              radius={3000}\n              options={{strokeColor: \"#ff0000\"}}\n            />}\n          </Fragment>\n        );\n      })}\n    </GoogleMap>\n  );\n}\n\nexport default withScriptjs(withGoogleMap(Map));"]},"metadata":{},"sourceType":"module"}